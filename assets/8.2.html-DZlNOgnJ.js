import{_ as o,c as i,a,b as e,o as n}from"./app-DnlLL9_Q.js";const s={};function r(l,t){return n(),i("div",null,t[0]||(t[0]=[a('<h2 id="section-8-2-security-orchestration-automation-and-response-soar" tabindex="-1"><a class="header-anchor" href="#section-8-2-security-orchestration-automation-and-response-soar"><span>Section 8.2 Security Orchestration, Automation, and Response (SOAR)</span></a></h2><p>As you study this section, answer the following questions:</p><ul><li>What is a SOAR system?</li><li>How is a playbook used in a SOAR system?</li><li>What are the benefits of DevSecOps?</li><li>What is single pane of glass orchestration?</li></ul><p>In this section, you will learn to:</p><ul><li>Explain automation technologies</li><li>Explain DevSecOps</li><li>Explain workflow orchestration</li></ul><p>The key terms for this section include:</p><p><strong>Key Terms and Definitions</strong></p>',7),e("table",{class:"terms"},[e("caption",{class:"fw-bold"}," Key Terms and Definitions "),e("thead",null,[e("tr",null,[e("th",{class_:"firstTableHeader"},"Term"),e("th",null,"Definition")])]),e("tbody",null,[e("tr",null,[e("td",null,"Security orchestration, automation, and response (SOAR)"),e("td",null," A collection of technologies that allow the security team of an organization to collect various types of inputs that they can monitor. ")]),e("tr",null,[e("td",null,"Continuous integration"),e("td",null," Automating the integration of changes that multiple contributors make to a development project. ")]),e("tr",null,[e("td",null,"Continuous delivery"),e("td",null," Automatically deploying all the changes the coders make into a testing/production environment. ")]),e("tr",null,[e("td",null,"DevSecOps"),e("td",null," An abbreviation for development, security, and operations. It is a philosophy that everyone in an organization should be responsible for the security of their systems. ")]),e("tr",null,[e("td",null,"Workflow orchestration"),e("td",null," Planning out tasks in such a way that they are as efficient and effective as possible. ")]),e("tr",null,[e("td",null,"Scripts"),e("td",null,"Lists of commands that can be executed by a certain program.")]),e("tr",null,[e("td",null,"Application programming interface (API)"),e("td",null," A set of functions and procedures that allow two or more applications to communicate with each other. ")])])],-1),a('<p>This section helps you prepare for the following certification exam objectives:</p><table><thead></thead><thead><tr><th>Exam</th><th>Objective</th></tr></thead><tbody><tr><td>CompTIA CySA+ CS0-003</td><td> 1.2 Given a scenario, analyze indicators of potentially malicious activity <ul><li> Host-related <ul><li>Malicious processes</li></ul></li></ul><p> 1.3 Given a scenario, use appropriate tools or techniques to determine malicious activity </p><ul><li> Tools <ul><li> Log analysis/correlation <ul><li> Security orchestration, automation, and response (SOAR) </li></ul></li></ul></li><li>Programming languages/scripting</li></ul><p> 1.5 Explain the importance of efficiency and process improvement in security operations </p><ul><li> Standardize processes <ul><li>Identification of tasks suitable for automation</li><li>Team coordination to manage and facilitate automation</li></ul></li><li> Streamline operations <ul><li>Automation and orchestration</li><li><ul><li>Threat feed combination</li></ul></li></ul></li><li> Technology and tool integration <ul><li>Application programming interface (API)</li></ul></li><li>Single pane of glass</li></ul><p>3.2 Given a scenario, perform incident response activities</p><ul><li> Detection and analysis <ul><li>Data and log analysis</li></ul></li></ul></td></tr></tbody></table><h3 id="_8-2-1-automation-overview" tabindex="-1"><a class="header-anchor" href="#_8-2-1-automation-overview"><span>8.2.1 Automation Overview</span></a></h3><p>Click one of the buttons to take you to that part of the video.</p><p>Automation Overview 00:00-00:29 Think about the chores you do every day, like washing your clothes or doing the dishes. You could do these things by hand if you wanted, but it would take longer and probably be less effective than doing them with a machine. The process of having machines assist human labor is called automation, and a similar mindset is used in many kinds of computing. In this lesson, I&#39;m going to cover a variety of facts about automation so you can have a better idea of how this works.</p><p>DevSecOps 00:29-01:19 The term Development, Security, and Operations is more commonly referred to as DevSecOps. This is the philosophy in which everyone in an organization is responsible for their system&#39;s security. This means that everyone should implement security decisions in the same way that development and operation decisions are made. If everyone in a company becomes better at security, the entire organization benefits, and customers have greater software assurance.</p><p>While this might take a while to set up initially, it eventually streamlines the process for everyone and leads to lower costs and development times. During the software development process, engineers constantly check each other&#39;s work and test the software for bugs and vulnerabilities. In this way, fewer vulnerabilities make their way into the final product, which means that we end up investing less time and money into fixing things post-release.</p><p>Workflow Orchestration 01:19-02:02 In a musical orchestra, there are many different instruments that are brought together to create something wonderful. Members follow what&#39;s written on their music sheets and the real-time directions given to them by the conductor. Just like a musical orchestra, workflows can be orchestrated to make them as efficient as possible so that they produce the best results.</p><p>A workflow refers to a collection of tasks that are performed in a logical sequence. Orchestration means that you plan these tasks in such a way that they&#39;re as efficient as possible.</p><p>For example, you can orchestrate different parts of your workflow, including the development, quality assurance, and security. Orchestration often incorporates the use of tools that automatically complete certain tasks in a sequence.</p><p>SOAR 02:02-02:55 To help with workflow orchestration, many companies are using automated cybersecurity solutions that are able to quickly identify and resolve potential attacks. One of these solutions is Security Orchestration, Automation, and Response, which is known by the acronym SOAR.</p><p>SOAR refers to a collection of software programs that allow an organization&#39;s security team to collect various inputs they can monitor. The point of SOAR is to replace tasks that are repetitive and done manually with automated workflows. These systems automatically flag security incidents and respond to them in a predetermined way.</p><p>This means that these incidents are caught earlier. This also frees up security analysts to spend their time and attention on only the most advanced security threats. For example, using a firewall application, SOAR can automatically detect a brute-force login attack and block the attacker&#39;s IP address.</p><p>Continuous Integration 02:55-03:49 Another orchestration technique we see is known as continuous integration, or CI. When you work on a software development team, you often have multiple people contributing to the same project. The practice of continuous integration means that you automate all integration changes made by these contributors back into a shared mainline.</p><p>In general, there&#39;s a central repository where all code changes are merged into a single file that&#39;s used to test the current build&#39;s effectiveness. Under this strategy, developers try to merge their changes back to the main branch as often as possible. The new changes are then automatically tested to make sure they don&#39;t break the application when they&#39;re integrated. This can greatly streamline the development process because developers don&#39;t need to manually discuss the changes they make with the rest of the team. This also cuts down on overhead costs and lets developers focus on the code and not on a complex web of communication.</p><p>Continuous Delivery and Deployment 03:49-04:32 Continuous delivery is like an extension of continuous integration. It automatically deploys all the changes coders make into a production environment. You have both an automated testing process and an automated release process that you can set to occur at whichever interval you feel is best.</p><p>Continuous deployment goes a step further than continuous delivery. Continuous deployment means that any change that goes through all the production pipeline stages is automatically released to customers. There&#39;s no human intervention in this process, and only if the change fails one of the tests along the way is it prevented from being pushed out. This has the potential to create an extremely streamlined process and quicker responses to customer feedback.</p><p>Summary 04:32-05:26 That&#39;s it for this lesson. In this lesson, we first discussed DevSecOps and explained how this philosophy adds security measures to every step of the development process. Next, we discussed workflow orchestration and showed how it can help the development process run more smoothly with all the different elements aligned in the most efficient way. A big part of this is automating whichever elements can possibly be automated.</p><p>We also introduced you to some tools to help in your orchestration, including SOARS, which lets the security team automatically collect data to help them identify security threats. And finally, we discussed how continuous integration lets you automate the integration of changes from multiple developers into a central staging area. Lastly, we showed that you can use continuous deployment to ensure changes are automatically deployed to a production environment and pushed out to end users.</p><h3 id="_8-2-2-soar-facts" tabindex="-1"><a class="header-anchor" href="#_8-2-2-soar-facts"><span>8.2.2 SOAR Facts</span></a></h3><p>Automation tools add the characteristic speed and efficiency of computers to incident response capabilities. Automated responses can be as simple as scheduled tasks designed to look for predefined attributes, such as log file entries, data content matches, or output from scripted tasks. These methods can be highly effective at detecting change and can include changes to the environment in response.</p><p>A more sophisticated implementation involves using security orchestration, automation, and response (SOAR) platforms, typically integrated with SIEM. A SOAR platform can leverage the work done by SIEM to process log data and identify events and then perform the next steps that a human analyst may typically require.</p><p>This lesson covers the following topics:</p><ul><li>SOAR</li><li>Continuous integration</li><li>Continuous delivery and deployment</li></ul><h4 id="soar" tabindex="-1"><a class="header-anchor" href="#soar"><span>SOAR</span></a></h4><p>Security orchestration, automation, and response (SOAR) is designed to automate some of the routine tasks ordinarily performed by security personnel in response to a security incident. SOAR systems can quickly analyze large amounts of data. This allows the security team to detect and respond to threats quickly, even when network traffic is heavy. The following tools can be part of a SOAR solution:</p><ul><li>A security information and event management (SIEM) platform</li><li>Firewalls</li><li>Logs (user logins, network traffic, etc.)</li><li>Intrusion detection tools</li><li>A user behavior analytic (UEBA) system</li><li>Cloud and SDN/SDV APIs</li><li>Cyber Threat Intelligence (CTI) feeds</li><li>Automated malware signature creation</li></ul><p>The basis of SOAR is to scan security and threat intelligence data collected from multiple sources within the enterprise and then analyze it using various techniques defined via playbooks. A SOAR can also assist with provisioning tasks, such as creating and deleting user accounts, making shares available, or launching VMs from templates.</p><p>An incident response workflow is a classic example of a SOAR task defined within a playbook. A playbook contains a checklist of actions to perform in response to a specific event. A playbook should be made highly specific by including the query strings and signatures that will detect a particular type of incident. A playbook may account for compliance concerns, such as breach notification requirements, including when and to whom notification must be made.</p><p>When a playbook utilizes a high degree of automation from a SOAR system, it can be referred to as a runbook, though the terms are also widely used interchangeably. A runbook aims to automate as many of the playbook&#39;s stages as possible while incorporating clearly defined interaction points for human analysis. These interaction points should present contextual information and guidance needed for an analyst to make a quick, informed decision about the best way to proceed with incident mitigation.</p><ul><li>For example, a runbook may use integrations for cloud-based email platforms and anti-malware solutions. The runbook may take email attachments from user emails and submit them to a crowdsourced detection engine such as VirusTotal. If VirusTotal identifies the file as malicious, the SOAR can provide a new custom detection signature to the anti-malware software to locate and block any other instances of the malware.</li></ul><p>SOAR platforms also typically provide a case management interface used by security analysts to manage and document their work. The case management feature operates similarly to a help desk ticketing solution. The case management feature allows analysts to search for specific events and filter/sort events by specific attributes, such as severity level.</p><h4 id="continuous-integration" tabindex="-1"><a class="header-anchor" href="#continuous-integration"><span>Continuous Integration</span></a></h4><p>Another orchestration technique is continuous integration (CI). The practice of continuous integration automates the integration of all changes made by contributors into a central repository. All code changes are merged into a single file. The central repository is used to test the current build.</p><p>Using this strategy, developers merge changes into the repository as quickly as possible. The new changes are automatically tested to ensure they do not break the application. This can streamline the development process because it eliminates the need for developers to discuss the changes in person with the rest of the team.</p><h4 id="continuous-delivery-and-deployment" tabindex="-1"><a class="header-anchor" href="#continuous-delivery-and-deployment"><span>Continuous Delivery and Deployment</span></a></h4><p>Continuous delivery is an extension of continuous integration. It automatically deploys into the production environment all changes coders make. There is an automated testing and release process that you can set to occur at a specified interval.</p><p>Continuous deployment goes one step further. Continuous deployment automatically releases to customers all the production pipeline stages. There is no human intervention in this process. If the change fails one of the tests in the process it is prevented from being pushed out. This can create an extremely streamlined process and quicker response to customer feedback.</p><h3 id="_8-2-3-devsecops-facts" tabindex="-1"><a class="header-anchor" href="#_8-2-3-devsecops-facts"><span>8.2.3 DevSecOps Facts</span></a></h3><p>Information technology and security operations are complex and continuously present new challenges to manage. Automation is an increasingly critical approach to protecting digital assets from malicious attackers and data breaches. Automation streamlines security operations, making them more efficient, consistent, reliable, and cost-effective.</p><p>This lesson covers the following topics:</p><ul><li>DevSecOps</li><li>Streamlining operations</li></ul><h4 id="devsecops" tabindex="-1"><a class="header-anchor" href="#devsecops"><span>DevSecOps</span></a></h4><p>DevSecOps is the philosophy that everyone in an organization is responsible for the security of the system. DevSecOps promotes that security is built-in and not a fence around apps. Everyone should implement security decisions within their portion of the project. If everyone in a company takes responsibility for security, the entire organization benefits, and there is greater customer software assurance.</p><p>While DevSecOps initially takes time to set up, it streamlines the process for everyone, leading to lower costs and development times. During the software development process, engineers constantly check each other&#39;s work and test the software for bugs and vulnerabilities. In this way, there are fewer vulnerabilities in the final product. The organization does fewer bug fixes and less damage control post-release.</p><p>Security automation is an important component of DevSecOps. It helps create shorter development cycles that experience fewer disruptions.</p><h4 id="streamlining-operations" tabindex="-1"><a class="header-anchor" href="#streamlining-operations"><span>Streamlining Operations</span></a></h4><p>Orchestrating threat intelligence data can help organizations streamline operations in several ways. By continuously monitoring threat intelligence feeds, organizations can automatically detect new threats and indicators of compromise (IOCs) in real-time and without manual intervention. This can improve incident response by reducing the time it takes to identify and respond to security incidents. Threat hunting can also be enhanced by orchestrating threat intelligence data, providing a more comprehensive view of the threat landscape, including emerging threats and attack trends. Additionally, aggregating threat intelligence data from multiple sources can help organizations make better decisions about their prioritization efforts, including where to allocate resources and which security controls to implement. Finally, sharing threat intelligence data across different teams and departments can improve collaboration, ensuring everyone can access the same information and work together more effectively to identify and respond to threats.</p><p>Security operations centers (SOCs) are integral to the success of an organization&#39;s information security program, as they are responsible for the detection, prevention, and response to cyber incidents across an organization&#39;s networks. Effective team coordination within a SOC is critical to the successful operation of the security operations center. The SOC team comprises network security engineers, security analysts, incident responders, and other IT professionals working together to detect and prevent cyber-attacks. The team must be able to quickly and effectively collaborate to identify and respond to potential threats. The team must also be able to work together to identify potential security incidents and develop plans for mitigating the threats. To ensure successful coordination, the SOC team needs to have strong communication skills and be able to effectively share information between team members. Additionally, the team should have established procedures for handling cyber incidents and an effective system for managing and responding to alerts. With a well-coordinated SOC team, an organization can be better prepared to detect, respond to, and prevent cyber threats.</p><p>Automation is becoming increasingly crucial in security operations centers (SOCs). Automation leverages automated scripts, specialized software tools, and data interfaces to help the security team manage activities more efficiently. Automation helps the SOC team reduce manual labor and increase accuracy and speed in detecting and responding to incidents. Automation can also reduce the costs associated with manual processes. To effectively manage automation in a SOC, the team must understand the tools used, the incidents they are dealing with, and the processes associated with responding to them. The team must also be able to work together to identify the most effective tools to use and develop procedures for responding to incidents as quickly as possible.</p><p>The following video gives an overview of implementing process improvement in security operations:</p><h4 id="video" tabindex="-1"><a class="header-anchor" href="#video"><span>Video</span></a></h4><p>Click one of the buttons to take you to that part of the video.</p><p>Implementing Process Improvement 00:00-08:00 James Stanger: You know, when it comes to security, process is so important and improving those processes is even more important. To tell us more about using automation, I&#39;ve brought in Mitre&#39;s Jamie Williams. He is the Cyber Adversarial Emulation Engineer for Mitre. Did I get your title right?</p><p>Jamie Williams: You nailed it, thank you.</p><p>James Stanger: Alright.</p><p>Jamie Williams: Truly an Evangelist.</p><p>James Stanger: You know, yeah Chief Technology Evangelist may be a cool title; I think yours is far cooler. Tell us how you got started in security real quick and let&#39;s start talking about what you do to improve processes.</p><p>Jamie Williams: Okay, yeah. My security route was a little bit different. I wasn&#39;t building computers as a child, I was actually more of just kind of a curious, you know, I like math, I like engineering. So computer security has always been really fascinating to me in terms of, it&#39;s, once you get into that realm of understanding, you know, it&#39;s not just the computer doing, you know, what it needs to do, there&#39;s people trying to harm it. And there&#39;s, you know, this cat and mouse game and constant balance of trying to be more defended than your adversary.</p><p>So, just love that passion project of, you know, continuously learning and I think that&#39;s where automation comes to play in terms of your adversaries are always trying to get better. They&#39;re trying to find ways to get into your systems, to break your systems, to steal your data and they&#39;re constantly innovating. And I think as defenders, we need to at least try to keep up with that and it starts with automation, in terms of you know, we need to start looking at more the tip of the spear.</p><p>What&#39;s the best practices that we can do? But we can only really do that if we&#39;re doing the easy and the fundamental stuff well and I think that&#39;s where automation comes in as a really powerful solution in terms of, you know, kind of building that foundation so that we can start worrying about more of those next ideas and those bigger innovative kind of concepts.</p><p>James Stanger: What are the types of tasks that you emulate? For example, if you&#39;re working with a hospital, what are some of the types of things that you automate? &#39;Cause you&#39;re working with thousands of systems, aren&#39;t you?</p><p>Jamie Williams: Yeah. I think automation is one of those things, I think there&#39;s never really a case where it&#39;s not a good candidate to consider and I think that any, you know, something, especially when you think about automation, you start looking at things that need to scale in terms of if I&#39;m collecting data, if I&#39;m, you know, checking on a particular, you know, variable or a particular file or a piece of information, that&#39;s something that is a really good candidate.</p><p>But also, you know, any time we&#39;re doing like, processes or you know, we&#39;re doing something, you realize, we do it kind of the same way over and over again and we almost, feels like, there was like, I&#39;m turning my mind off and I&#39;m just doing the routine thing.</p><p>You know, I&#39;m checking on this log, I&#39;m looking for this particular, you know, variable over here [or burning] this command. Those are always those really good candidates where, hey, like, maybe we should try to automate this, take this off our plate so that we can worry about the next thing, &#39;cause that&#39;s exactly what our adversaries are doing, and so if we&#39;re not keeping up with that kind of progression, we&#39;re potentially falling behind the race.</p><p>So I think it&#39;s one of those, automation, I think is one of those kind of beautiful solutions where, you know, when you&#39;re doing the daily routine, you know, going through your processes, taking a step back and saying, you know, is there necessarily a shortcut or a way to fast forward this so that, you know, not only can you save a bunch of time on your side, but maybe make it more accessible for someone else?</p><p>You know, maybe someone new to the team or your hospital example, maybe we only have one person and they have ten different tasks to do, really great opportunity to maybe scale that capability.</p><p>James Stanger: And to do that, do you grab like, a team of developers to do that or sometimes there are specific tools you can use?</p><p>James Stanger: I think it starts with the business. It&#39;s understanding exactly, like you said, like what are we trying to do? Are we collecting data? Are we making sure passwords are safe? Are we deploying some type of system or software across the environment? And really understanding, you know, what is the objective?</p><p>And then to your point, the tools and the process and all the mechanics that really stitches that together kind of highlights itself, in terms of, you know, there&#39;s not just one, you know, great approach to automation, it&#39;s really understanding the use case, you know, what am I trying to achieve?</p><p>And then, you know, sometimes really the conclusion is, this isn&#39;t a good candidate for automation and there&#39;s a lot of, you know, uncertainty or maybe hiccups that could get in the way. But you really only can see that forest for the trees if you start to kind of map that out and really understand, you know, what are we actually trying to do here? &#39;Cause again, you don&#39;t wanna get in the way of the utility of whatever that process was actually supposed to accomplish.</p><p>James Stanger: So you&#39;ll sometimes work with IT folks or with people who aren&#39;t even IT folks to identify a process and then figure out from a security perspective what you can automate, what you can kind of, what boring you can eliminate, as it were, right?</p><p>Jamie Williams: Exactly. It&#39;s like you said, your goal with automation is to make everyone&#39;s lives easier. So again, like, thinking about the hospital example, you don&#39;t want a doctor in an operating room worrying about, you know, their passwords and trying to log into a system during that critical information or critical time versus, you know, making that, using automation and using technology to make that a seamless process where not only are they able to do their specialty and focus on their task, but they also, you have that security kind of wrapper where you&#39;ve already ingrained, you know, those security foundations, principles that you&#39;re trying to instill into that process.</p><p>James Stanger: You know, to do certain things like orchestration and things like that, is that where you kind of identify if there&#39;s a certain condition, then there are certain tools that come into play there? Is that how that works?</p><p>Jamie Williams: Yeah, I think that&#39;s a good way to describe it and I think it&#39;s again, one of those cases where taking a step back, understanding the process and really those, I always like to think of those like, &#39;if then&#39; scenarios, where you&#39;re orchestrating something, you know, if, it&#39;s almost a trigger to something. Or like, when do we wanna do this? When do we wanna take action? When do we not?</p><p>One of the conditions that might change the way we do this; if you&#39;re able to really get a really good picture of, you know, this is the process that we wanna do, whether it&#39;s manual or automated and if you&#39;re able to map that out very cleanly, you might have a really good opportunity, exactly as you said, trying to inject automation versus if there&#39;s a lot of confusion and chaos and you don&#39;t really understand what you&#39;re trying to do, you might just be creating a more, a bigger problem for yourself to deal with later.</p><p>You know, back to the hospital example, last thing you wanna do is deploy some automated solution and have all the doctors, nurses and staff yelling at you in this big chaotic mess that you created by trying to, you know, you were trying to do good but by way of technology, maybe created more of a problem.</p><p>James Stanger: Kind of brings a whole new meaning to the phrase, &#39;first do no harm,&#39; right?</p><p>James Stanger: Exactly. [LAUGHS] Well done.</p><p>James Stanger: You know, Brian, at the end, sometimes you&#39;re asked to bring in a more visualization or a visibility to a situation - they&#39;ll call that a single pane of glass. To do that, are you using APIs often or webhooks and things like that to bring about that kind of automation?</p><p>Jamie Williams: Yeah, and I think the biggest use case exactly as you were saying, is more that defensive standpoint of, you know, as defenders we have to look across many systems. We&#39;re trying to look for bad. We sometimes know what bad looks like, sometimes we don&#39;t.</p><p>So there&#39;s a lot of automation kind of value in terms of, even in that very simple use case, you know, analyzing things without having to put it in front of a human every time. Bringing it all together, correlating it, being able to say, okay, well, maybe I see half bad over here; I&#39;m not sure I see another half over here.</p><p>Together they&#39;re a whole, so I&#39;m able to kind of maybe come to a better conclusion there. But I think exactly to your point, that&#39;s really only possible if you really understand the domain and understand what you&#39;re trying to automate, &#39;cause you&#39;re not gonna automate a process that you don&#39;t understand versus taking all that knowledge and all those lessons learned over time and baking that into something that, you know, bits and bytes and can kinda handle for you.</p><p>James Stanger: That&#39;s terrific, and so baking things in, you could bake in a threat feed, for example to get more enriched data and things like that, all sorts of things, right?</p><p>Jamie Williams: Exactly.</p><p>James Stanger: You know, Brian, thank you so much for your time, really appreciate learning more about, you know, bringing about better efficiency to our processes. Thanks, man.</p><p>Jamie Williams: Appreciate it.</p><h3 id="_8-2-4-workflow-orchestration-facts" tabindex="-1"><a class="header-anchor" href="#_8-2-4-workflow-orchestration-facts"><span>8.2.4 Workflow Orchestration Facts</span></a></h3><p>Orchestrating threat intelligence data is an essential strategy for staying ahead of adversaries. Data enrichment combines and analyzes data from disparate sources to better understand the threat landscape. This can involve combining different threat feeds to get a complete picture of the malicious actors, tools, and tactics that attackers use. It can also involve correlating data from multiple sources, such as network logs, endpoint data, and threat intelligence feeds, to identify and prioritize threats. By orchestrating threat intelligence data, organizations can better understand their threats and take preemptive action to protect their networks. With the right processes in place, organizations can effectively create a complete picture of the threat landscape and ensure they take the proper steps to stay ahead of cyber adversaries.</p><p>This lesson covers the following topic:</p><ul><li>Workflow orchestration</li></ul><h4 id="workflow-orchestration" tabindex="-1"><a class="header-anchor" href="#workflow-orchestration"><span>Workflow Orchestration</span></a></h4><p>A workflow refers to a collection of tasks that are performed in a logical sequence. Orchestration means that you plan these tasks to be as efficient as possible. Orchestration often incorporates tools that automatically complete certain tasks in a sequence.</p><p>The following table describes several types of orchestration that organizations use.</p><table><thead><tr><th>Orchestration Type</th><th>Description</th></tr></thead><tbody><tr><td>Cloud orchestration</td><td> An approach that uses cloud tools to provision, start, or decommission servers, allocate storage, and enable apps to use cloud services. </td></tr><tr><td>Service orchestration</td><td> An approach that seeks to provide a complete solution for delivering a particular service. This includes gathering app requirements, developing the app, and deploying the app into production. </td></tr><tr><td>Release orchestration</td><td> A group of tools that works together to create deployment automation, pipeline management, and environment management. </td></tr><tr><td>Single pane of glass orchestration</td><td> Single pane of glass is a term used to describe a unified view of a computer network or system. It is a graphical user interface that allows network administrators to manage their entire network from one place. The user interface can include monitoring, configuration, and control of the network, its components, and related services. <p> Single Pane of Glass Orchestration is a powerful way of managing security operations. It allows security teams to see, monitor, and control all their security systems and services in one place. By combining all security services into a &quot;single pane of glass,&quot; security teams are better able to identify and respond to threats quickly and effectively. With this approach, security teams can automate workflows, allowing them to focus on responding to threats instead of managing multiple interfaces. It also provides real-time visibility into security incidents and events, simplifying the process of responding to and resolving them. Single Pane of Glass Orchestration is an invaluable tool for improving the efficiency of an organization&#39;s security operations. </p></td></tr></tbody></table><h3 id="_8-2-5-automation-technologies" tabindex="-1"><a class="header-anchor" href="#_8-2-5-automation-technologies"><span>8.2.5 Automation Technologies</span></a></h3><p>Click one of the buttons to take you to that part of the video.</p><p>Automation Technologies 00:00-00:42 Sometimes, having a good tool can make all the difference. For example, if your job is to gather lumber, there&#39;s a huge difference between trying to do it with an ax or doing it with a chainsaw. With an ax, you do most of the work yourself and it takes a lot longer. With a chainsaw, the machine does most of the work for you. Automation technologies are like that as well. They&#39;re digital tools that help people perform tasks with less human effort. They make a variety of tasks easier by leveraging the power of technology to do the heavy lifting so that human workers can focus on other important tasks. In this lesson, I&#39;ll talk about a variety of automation tools that can make our lives a lot easier.</p><p>Scripts 00:42-01:16 The first tool we&#39;ll discuss is scripts. Scripts are lists of commands that can be executed by a certain program. They&#39;re what automates software programs on our computers or creates interactive web pages online. In the field of digital security, we see scripts used to automate a whole variety of different tasks. They&#39;re usually lists of commands that can be read by special runtime environments, such as JavaScript. These commands are usually interpreted, rather than compiled like regular code.</p><p>Another automation technology that works a bit like scripting is called an API. Let&#39;s take a look.</p><p>Application Programming Interface 01:16-02:28 In our complicated world of modern technology, programmers need an easy way to access data without knowing all the nitty-gritty details about each site they&#39;re working with. To make integration like this possible, programmers use APIs. API is an acronym for application programming interface. These are basically just a way for programmers to interact separately with a certain portion of a site&#39;s code.</p><p>In other words, an API is the interface that defines the interactions between multiple software intermediaries. For example, an API is responsible for such things as defining the types of requests that can be made, how to make them, the formats to use, and so forth. An API is a bit like a restaurant menu. A menu gives you, the customer, the ability to order your food without needed to know where the food comes from or how it&#39;s cooked. Developers save a lot of time by using APIs and letting the program take care of the nuts and bolts behind the scenes, as can you if you learn how to utilize them. It&#39;s important to remember that an API isn&#39;t the server itself, but a bunch of code that helps a server accomplish useful tasks.</p><p>Let&#39;s move on and talk a bit about how automation technologies help companies with their security processes.</p><p>Malware Signatures 02:28-03:03 It&#39;s in an organization&#39;s best interest to spot malware before it&#39;s able to wreak havoc on their network. Security teams use malware detection software to look for malware signatures, which are the bits of code that give the malware away as malicious. Some systems simply look for known malware, while other more modern systems try to predict what code will do before it&#39;s run and identify malicious intent before it&#39;s too late. If people had to do this process by hand, it would take much, much longer. By automating the process, employees can worry about other things while the software works to keep them secure.</p><p>Threat Feeds 03:03-03:48 Another way that companies use automation to help with security is by using threat feeds. Threat intelligence is organized and prioritized information about past, current, and potential future threats to an organization&#39;s data.</p><p>This data can include URLs, domain names, IP addresses, and file names that&#39;ve proven malicious in the past. A threat feed consists of a stream of threat intelligence information fed to the company through its automated systems. You can obtain this information from free indicator feeds, bulletins, paid feeds, and other strategic partnerships. For example, organization like CERT and SANS provide open-source feeds for free. This information can help your organization&#39;s security team make decisions about how to deal with current threats.</p><p>Security Content Automation Protocol 03:48-04:30 In addition to threat feeds, there are various security standards that companies can use to automate their security. One of these is known as Security Content Automation Protocol, or SCAP. SCAP is a framework that has a wide variety of uses and fits with numerous modern standards. For example, you can use SCAP&#39;s standards to help your organization automate its security processes so that there are systems in place to look for vulnerabilities, misconfigurations, and attacks. SCAP can also be used to help security teams scan computers and other devices based on a predetermined security baseline. This lets the organization know whether they&#39;re using the proper configurations to maximize system security.</p><p>Machine Learning 04:30-05:10 Finally, let&#39;s touch on the topic of machine learning, which is a large part of many companies&#39; automation solutions.</p><p>Combing through massive amounts of data can be a daunting task, even for a large team of human minds. That&#39;s why machine learning is such an important tool. It automates the data analysis by looking for patterns. Machine learning uses algorithms to analyze different types of data as well, which helps analysts make better sense of everything.</p><p>For example, machine learning can display tailored search engine results and social media feeds, compile lists of trends in customer preferences, or even try to sniff out security threats. This could be a large group of numbers, text strings, or even pictures.</p><p>Summary 05:10-05:43 That&#39;s it for this lesson. In this lesson, we talked about how scripts are used to automate tasks. Next, we talked about APIs and how to integrate API technology to make our systems run smoother and more efficiently. We also talked about how threat feeds can help teams make sound decisions through data compilation. We discussed the benefits of SCAP, and also how machine learning helps analysts comb through vast amounts of data to look for patterns that can be leveraged for security purposes.</p><h3 id="_8-2-6-automation-technologies-facts" tabindex="-1"><a class="header-anchor" href="#_8-2-6-automation-technologies-facts"><span>8.2.6 Automation Technologies Facts</span></a></h3><p>Using the proper automation technologies can make a variety of tasks easier by leveraging the power of technology to do the heavy lifting so that human workers can focus on other important tasks.</p><p>This lesson covers the following topics:</p><ul><li>Scripts</li><li>Application programming interfaces (APIs)</li><li>Malware signatures</li><li>Threat feeds</li><li>Machine learning</li></ul><h4 id="scripts" tabindex="-1"><a class="header-anchor" href="#scripts"><span>Scripts</span></a></h4><p>One way to automate tasks is by using scripts. Scripts are lists of commands that can be executed by a certain program. You can use scripts to automate processes on a computer or even to create web pages online. Key points are:</p><ul><li>Scripts are usually lists of commands. The commands are usually interpreted rather than compiled like code.</li><li>Scripts require a runtime environment to execute. <ul><li>The runtime environment and scripts are platform-specific.</li><li>Code is platform-independent.</li></ul></li><li>You use a scripting language to write a script. Scripting languages include: <ul><li>PHP</li><li>Python</li><li>JavaScript</li></ul></li><li>Each scripting language runs in a particular runtime environment. The actions a script can perform depend on that runtime environment.</li><li>Programming languages usually run faster than scripting languages, even though they are much more code intensive.</li><li>There are certain things that you cannot do with a scripting language. You are limited by what kind of commands the runtime environment supports.</li></ul><blockquote><p>The runtime environment carries out the commands and not the scripting language itself.</p></blockquote><h4 id="application-programming-interfaces-apis" tabindex="-1"><a class="header-anchor" href="#application-programming-interfaces-apis"><span>Application Programming Interfaces (APIs)</span></a></h4><p>To interact with popular security services without human engagement, an application programming interface (API) is essential. In this context, an API is a set of functions and procedures that allow two or more applications to communicate with each other. An API defines the types of calls or requests that can be made, how to make them, the data formats that should be used, and the conventions to follow. It can also provide extension mechanisms so that software can extend its existing functionality.</p><p>It is important to remember that:</p><ul><li>An API is a specification for interaction with other software or resources.</li><li>APIs free a developer from having to reinvent something that has already been created and is working well. Programmers do not have to write code for basic functions such as hardware controls (keyboard, monitor, etc.) and system controls (graphical interface, file storage, file copy, etc.).</li><li>When you use an API on your website, the API interfaces directly with another site&#39;s web server, such as Google for authentication or Paypal for payment.</li></ul><h4 id="malware-signatures" tabindex="-1"><a class="header-anchor" href="#malware-signatures"><span>Malware Signatures</span></a></h4><p>Security teams can use malware detection software to look for malware signatures (bits of code that identify the code as malicious). Other systems try to predict what the code will do before it is run and identify malicious intent.</p><p>Security personnel can use anti-virus software that checks the signature or hash from each file against a list of known malicious signatures. The depth at which files are analyzed can be adjusted. The more depth the program goes into, the more time it takes to run the scan.</p><p>To reduce processing time, you can change the settings to ignore certain types of files. These file types include:</p><ul><li>Non-executable files</li><li>Files over a certain size</li><li>Files with a legitimate checksum</li></ul><p>You can use various methods to scan for malicious code. The following table describes these methods.</p><table><thead><tr><th>Method</th><th>Description</th></tr></thead><tbody><tr><td>String scanning method</td><td> A search for a sequence of bytes/strings that indicate a specific virus and are not likely to be found in other apps or programs. </td></tr><tr><td>Wildcards method</td><td> A search that allows certain bytes or byte ranges to be skipped. </td></tr><tr><td>Generic detection method</td><td> A search that uses a common string to detect known variants of a virus family. </td></tr><tr><td>Bookmarks method</td><td> A search that calculates the distance between the start of the virus&#39;s body and the detection string. </td></tr><tr><td>Skeleton detection method</td><td> A search that parses the statements in a virus and drops off all non-essential elements. </td></tr></tbody></table><h4 id="threat-feeds" tabindex="-1"><a class="header-anchor" href="#threat-feeds"><span>Threat Feeds</span></a></h4><p>Threat intelligence organizes and prioritizes information about past, current, and potential future threats to an organization&#39;s data. This data can include URLs, domain names, IP addresses, and file names proven malicious in the past. A threat feed consists of a stream of threat intelligence information fed to the company through its automated systems. This information can help an organization’s security team make decisions about how to deal with current threats and how to prevent future ones.</p><p>The threat feed looks at both external and internal threats. External threats are perpetrated by those outside of an organization. Internal threats are attacks from someone within an organization. This could be someone disgruntled with the organization or someone who has been bribed or forced by an external party to harm the organization.</p><p>Red flags that might show up in an organization&#39;s threat feed include:</p><ul><li>Traffic to known malicious websites, strange IP addresses, and suspicious geographic locations</li><li>Changes to user permissions</li><li>Spikes in the amount of data downloaded</li><li>External requests for sensitive files</li><li>Unusual traffic on network ports</li><li>Unexpected file location changes</li><li>Strange patterns in DNS requests</li></ul><h4 id="machine-learning" tabindex="-1"><a class="header-anchor" href="#machine-learning"><span>Machine Learning</span></a></h4><p>Organizations create massive databases full of user information, including preferences and activity history. This information can provide a wealth of information for different parts of the organization, such as the marketing, research, and development teams.</p><p>The volume of information generated makes machine learning an important tool. Machine learning automates the process of analyzing huge amounts of data. The data can be a large group of numbers, strings of text, or even pictures. Machine learning uses algorithms to analyze the data and help analysts access the data they need.</p><p>Machine learning can be used for a variety of purposes, such as:</p><ul><li>Displaying tailored search engine results.</li><li>Tailoring a social media feed.</li><li>Compiling a list of customer trends and preferences.</li><li>Looking for security threats.</li><li>Recommending products based on purchase history.</li><li>Supporting virtual personal assistants (such as Apple&#39;s Siri and Amazon&#39;s Alexa) that use this information to make personalized recommendations.</li></ul><h3 id="_8-2-7-security-content-automation-protocol-facts" tabindex="-1"><a class="header-anchor" href="#_8-2-7-security-content-automation-protocol-facts"><span>8.2.7 Security Content Automation Protocol Facts</span></a></h3><p>Security Content Automation Protocol (SCAP) describes a suite of interoperable specifications designed to standardize the formatting and naming conventions used to identify and report on the presence of software flaws, such as misconfigurations and vulnerabilities.</p><p>This lesson covers the following topics:</p><ul><li>Security Content Automation Protocol (SCAP)</li><li>SCAP languages</li><li>SCAP identification schemes</li></ul><h4 id="security-content-automation-protocol-scap" tabindex="-1"><a class="header-anchor" href="#security-content-automation-protocol-scap"><span>Security Content Automation Protocol (SCAP)</span></a></h4><p>A SCAP validation program is a program that runs a test to determine whether a system can employ SCAP standards. SCAP-validated applications often scan systems and compare them against open cybersecurity standards. SCAP reports back with a score indicating how well the system is doing. The score can be a starting point for organizations to discuss the organization&#39;s security seriously and make a plan for improving security.</p><h4 id="scap-languages" tabindex="-1"><a class="header-anchor" href="#scap-languages"><span>SCAP Languages</span></a></h4><p>The following table describes the different languages used by SCAP:</p><table><thead><tr><th>SCAP Language</th><th>Description</th></tr></thead><tbody><tr><td>Open Vulnerability and Assessment Language (OVAL)</td><td> OVAL is an XML schema maintained by MITRE for describing system security state and querying vulnerability reports and information. <br> It helps describe three main aspects of an evaluated system, including: <br><ol><li>System information</li><li>Machine state</li><li>Reporting</li></ol><p> Using OVAL provides a consistent and interoperable way to collect and assess information regardless of the security tools used. </p></td></tr><tr><td>Asset Reporting Format (ARF)</td><td> As the name suggests, ARF helps to correlate reporting formats to assess information independently from any specific application or vendor product for consistency and interoperability. </td></tr><tr><td>Extensible Configuration Checklist Description Format (XCCDF)</td><td> Written in XML, XCCDF provides a consistent and standardized way to define benchmark information as well as configuration and security checks to be performed during an assessment. </td></tr></tbody></table><h4 id="scap-identification-schemes" tabindex="-1"><a class="header-anchor" href="#scap-identification-schemes"><span>SCAP Identification Schemes</span></a></h4><p>The following table describes the identification schemes used by SCAP to identify vulnerabilities:</p><table><thead><tr><th>Heading 1</th><td>Heading 2</td></tr></thead><tbody><tr><td>Common Platform Enumeration (CPE)</td><td> CPE is a scheme for identifying hardware devices, operating systems, and applications developed by MITRE. It uses a syntax similar to Uniform Resource Identifiers (URI). </td></tr><tr><td>Common Vulnerabilities and Exposures (CVE)</td><td> CVE is a scheme developed by MITRE and adopted by NIST for identifying vulnerabilities. <p> CVE is a list of records where each item contains a unique identifier used to describe publicly known vulnerabilities. Unique identifiers begin with CVE, followed by the year of identification and a unique number - CVE-YEAR-#####. </p></td></tr><tr><td>Common Configuration Enumeration (CCE)</td><td> CCE is a scheme developed by MITRE and adopted by NIST for provisioning secure configuration checks across multiple sources. <p> CCE is similar to CVE, except it is focused on configuration issues that may result in a vulnerability. </p></td></tr></tbody></table>',152)]))}const h=o(s,[["render",r],["__file","8.2.html.vue"]]),d=JSON.parse('{"path":"/CyberDefensePro/8.2.html","title":"8.2 Security Orchestration, Automation, and Response (SOAR)","lang":"zh-CN","frontmatter":{"lang":"zh-CN","title":"8.2 Security Orchestration, Automation, and Response (SOAR)","description":"some description"},"headers":[{"level":2,"title":"Section 8.2 Security Orchestration, Automation, and Response (SOAR)","slug":"section-8-2-security-orchestration-automation-and-response-soar","link":"#section-8-2-security-orchestration-automation-and-response-soar","children":[{"level":3,"title":"8.2.1 Automation Overview","slug":"_8-2-1-automation-overview","link":"#_8-2-1-automation-overview","children":[]},{"level":3,"title":"8.2.2 SOAR Facts","slug":"_8-2-2-soar-facts","link":"#_8-2-2-soar-facts","children":[]},{"level":3,"title":"8.2.3 DevSecOps Facts","slug":"_8-2-3-devsecops-facts","link":"#_8-2-3-devsecops-facts","children":[]},{"level":3,"title":"8.2.4 Workflow Orchestration Facts","slug":"_8-2-4-workflow-orchestration-facts","link":"#_8-2-4-workflow-orchestration-facts","children":[]},{"level":3,"title":"8.2.5 Automation Technologies","slug":"_8-2-5-automation-technologies","link":"#_8-2-5-automation-technologies","children":[]},{"level":3,"title":"8.2.6 Automation Technologies Facts","slug":"_8-2-6-automation-technologies-facts","link":"#_8-2-6-automation-technologies-facts","children":[]},{"level":3,"title":"8.2.7 Security Content Automation Protocol Facts","slug":"_8-2-7-security-content-automation-protocol-facts","link":"#_8-2-7-security-content-automation-protocol-facts","children":[]}]}],"git":{"updatedTime":1746806640000},"filePathRelative":"CyberDefensePro/8.2.md"}');export{h as comp,d as data};
